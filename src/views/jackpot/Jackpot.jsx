
import {NavLink} from "solid-app-router";
import { onMount, createSignal, onCleanup, Show, For, createEffect } from "solid-js";
import Coin from "../../utilities/Coin";
import Bg from '../../assets/img/jackpot/jackpot_bg.png';
import CardBg from '../../assets/img/jackpot/cardBg.svg';
import Brilliants from '../../assets/img/jackpot/brilliants.png';
import Middle from '../../assets/img/wheel/middle.png';
import YellowButtonBg from "../../assets/img/animatedButtonBg.jpg";

import injector from "../../injector/injector";
import { createStore } from "solid-js/store";

import WheelSplash from '../../assets/img/jackpot/wheelSplash.svg';
import GrayButtonBg from "../../assets/img/animatedGrayButtonBg.jpg";

import jackpotRollingSound from '../../assets/sounds/jackpot-rolling.wav';
const soundJackpotRoll = new Audio(jackpotRollingSound);


import Countup from "../../utilities/Countup";
import ChartJS from "./Chart";
import ItemInfo from "./ItemInfo";
import ItemSpinnerBg from "../../components/ItemSpinnerBg";
import {useI18n} from "../../i18n/context";

import JackpotGameBg from "../../assets/img/jackpot/jackpotGameBg.png";
import JackpotSnow from "../../components/elements/JackpotSnow";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { URL } from "../../libraries/url";
import Fallback from "../Fallback";
import PageLoadState from "../../libraries/PageLoadState";
dayjs.extend(relativeTime)
const Jackpot = ({ loaded }) => {

    const i18n = useI18n();

    let spinner;

    const { socket, toastr, userObject, SNOWMODE } = injector;


    const [game, setGame] = createStore({
        players: [],
        pot: 0,
        counter: 0,
        status: "open",
        hash: ""
    })

    const [history, setHistory] = createSignal([]);
    const [featured, setFeatured] = createSignal({});
    const [avatars, setAvatars] = createSignal([]);
    const [historyMode, setHistoryMode] = createSignal("history");
    const { jackpotPageLoaded, onJackpotPageLoad } = PageLoadState;

    const backgroundColors = [
        '#E1384C',
        '#2A38A7',
        '#5BCAEE',
        '#FF4A7D',
        '#C8411F',
        '#f55127',
        '#f5b027',
        '#ebf527',
        '#bef527',
        '#27f59c',
        '#27f5da',
        '#27d3f5',
        '#2773f5',
        '#2727f5',
        '#7627f5',
        '#a327f5',
        '#c527f5',
        '#f5276f',
        '#1e9c76',
        '#1e6d9c',
        '#7d7d02',
        '#7d4e02',
        '#7d0202',
        '#027d25',
        '#2f027d'
    ]

    let spin = (time) => {

        if (userObject?.user?.sounds) {
            soundJackpotRoll.currentTime = 0;
            soundJackpotRoll.volume = userObject.user.sounds;
            soundJackpotRoll.play()
        }
        

        if (spinner && spinner.style) {
            spinner.style.transform = `translateX(0rem)`;
            spinner.style.transitionTimingFunction = `cubic-bezier(0.12, 0.8, 0.38, 1)`;
            spinner.style.transitionDuration = `0s`;
        }

        setTimeout(() => {
            if (spinner && spinner.style) {
                spinner.style.transform = `translateX(${-7 * 78}rem)`;
                spinner.style.transitionTimingFunction = `cubic-bezier(0.12, 0.8, 0.38, 1)`;
                spinner.style.transitionDuration = `${time / 1000}s`;
            }
            setTimeout(() => {
                setAvatars([]);
            }, 16000)
        }, 10);
    }

    function getOffset(el) {
        const rect = el.getBoundingClientRect();
        return {
          left: rect.left + window.scrollX,
          top: rect.top + window.scrollY
        };
      }

    createEffect(() => {
        if(loaded()) {
            socket.emit("jackpot:connect", {}, (data) => {
                setGame("players", data.players)
                setGame("pot", data.pot)
                setGame("status", data.status)
                setGame("items", data.items)
                setGame("hash", data.hash);
                const historyArray = [...data.history].sort((a, b) => b.pot - a.pot);
                const sortArrayForWinChance = [...data.history].sort((a, b) => (a.winner.bet / a.pot) - (b.winner.bet / b.pot));
                setHistory([...data.history].slice(0, 4));
                setFeatured([
                    {...historyArray.filter(i => dayjs(i.provablyFair.random.completionTime).isAfter(dayjs().add(-1, "day")))[0], title: "biggest 24 HOUR winner", colorCalss: "featuredGreen"},
                    {...historyArray.filter(i => dayjs(i.provablyFair.random.completionTime).isAfter(dayjs().add(-30, "day")))[0], title: "BIGGEST 30 DAY WINNER", colorCalss: "featuredBlue"},
                    {...sortArrayForWinChance.filter(i => dayjs(i.provablyFair.random.completionTime).isAfter(dayjs().add(-1, "day")))[0], title: "luck of the day", colorCalss: "featuredGold"},
                    {...sortArrayForWinChance.filter(i => dayjs(i.provablyFair.random.completionTime).isAfter(dayjs().add(-30, "day")))[0], title: "luck of the month", colorCalss: "featuredRed"},
                ]);
                if(data.status == "spinning") {
                    spin(data.ticket, data.timeout * 1000);
                }
    
                onJackpotPageLoad(true);
    
            })
        }
    })

    onMount(() => {
        onCleanup(() => {
            socket.off("jackpot:players")
            socket.off("jackpot:counter")
            socket.off("jackpot:spin")
            socket.off("jackpot:history")
            socket.off("jackpot:reset")
        })

        socket.on("jackpot:players", (data) => {
            setGame("players", data.players);
            setGame("pot", data.pot);
            setGame("items", data.items)
        })
        socket.on("jackpot:counter", (data) => {
            setGame("counter", data.counter);
            setGame("status", "counting");
            setGame("hash", data.hash);
        })
        socket.on("jackpot:spin", (data) => {
            let avatars = data.avatars.sort(() => .5 - Math.random())
            avatars[87] = data.winner.avatar;
            setAvatars(avatars);
            spin(8000);

            setGame("status", "spinning");
        })
        socket.on("jackpot:history", (data) => {
            const historyArray = [...data.history].sort((a, b) => b.pot - a.pot);
            const sortArrayForWinChance = [...data.history].sort((a, b) => (a.winner.bet / a.pot) - (b.winner.bet / b.pot));
            setHistory([...data.history].slice(0, 4));
            setFeatured([
                {...historyArray.filter(i => dayjs(i.provablyFair.random.completionTime).isAfter(dayjs().add(-1, "day")))[0], title: "biggest 24 HOUR winner", titleColor: "#33EBB4"},
                {...historyArray.filter(i => dayjs(i.provablyFair.random.completionTime).isAfter(dayjs().add(-30, "day")))[0], title: "BIGGEST 30 DAY WINNER", titleColor: "#07B5FF"},
                {...sortArrayForWinChance.filter(i => dayjs(i.provablyFair.random.completionTime).isAfter(dayjs().add(-1, "day")))[0], title: "luck of the day", titleColor: "#FFC701"},
                {...sortArrayForWinChance.filter(i => dayjs(i.provablyFair.random.completionTime).isAfter(dayjs().add(-30, "day")))[0], title: "luck of the month", titleColor: "#FF6107"},
            ]);
        })

        socket.on("jackpot:reset", (data) => {
            setGame("players", []);
            setGame("pot", 0);
            setGame("items", 0);
            setGame("status", "open");
            setGame("hash", data?.hash);
        })
    })

    return (
    <Fallback loaded={jackpotPageLoaded}>
        <img alt="background" src={Bg} class="absolute left-0 top-0 min-w-full md:min-h-full" />
        <div class="w-full h-full overflow-y-scroll relative py-10 min-h-screen">
            <Show when={avatars().length > 0}>
                <div class="h-40 w-full">
                    <div class={`center flex-col gap-4 mb-10 duration-200 ${avatars().length > 0 ? "h-40" : "h-0"} overflow-hidden`}>
                        <svg width="35" height="32" viewBox="0 0 35 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g filter="url(#filter0_d_174_40909)">
                            <path d="M17.1486 23.0732L4.0481 0.637116L30.0285 0.509756L17.1486 23.0732Z" fill="url(#paint0_linear_174_40909)"/>
                            </g>
                            <defs>
                            <filter id="filter0_d_174_40909" x="0.0488281" y="0.509766" width="33.9805" height="30.5634" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
                            <feOffset dy="4"/>
                            <feGaussianBlur stdDeviation="2"/>
                            <feComposite in2="hardAlpha" operator="out"/>
                            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_174_40909"/>
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_174_40909" result="shape"/>
                            </filter>
                            <linearGradient id="paint0_linear_174_40909" x1="17.1486" y1="23.0732" x2="17.0016" y2="-6.92647" gradientUnits="userSpaceOnUse">
                            <stop offset="0.00520833" stop-color="#FFED01"/>
                            <stop offset="0.536458" stop-color="#FCAE00"/>
                            </linearGradient>
                            </defs>
                        </svg>
                        <div class={`h-16 duration-200 w-full center gap-4 overflow-hidden relative`}>
                            {/* <div class="absolute left-0 h-full w-40" style={{background: "linear-gradient(90deg, #191E2C 0%, rgba(25, 29, 42, 0) 100%)"}}></div> */}
                            <div class="h-full" style={{
                                "min-width": "133rem",
                                "max-width": "133rem",
                            }}>
                                <div class="flex h-full" ref={spinner}>
                                    <For each={avatars()?.length > 0 ? avatars() : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}>
                                        {(val, index) => (
                                            <div class="w-28 h-full center relative" style={{
                                                "min-width": "7rem",
                                            }}>
                                                { SNOWMODE && (index() === 3 || index() === 13 || index() === 36 || index() === 58 || index() === 71 ? <svg class="absolute left-1/2 transform -translate-x-1/2 top-0 z-30" width="51" height="28" viewBox="0 0 51 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M2.63579 21.7821C3.59034 20.784 3.19262 19.5364 2.55625 18.4385C1.84033 17.3904 0.806237 16.3923 0.328961 15.2944C-0.546045 13.3481 0.488053 11.2521 1.52215 9.30585C2.15852 8.00832 2.87443 6.71079 4.06762 5.56297C5.26081 4.51497 7.09037 3.56678 9.23811 3.41706C11.8631 3.21744 14.4881 4.16564 17.0336 3.8163C19.2609 3.51687 20.9314 2.36906 22.6018 1.42086C24.2723 0.472669 26.6587 -0.375716 28.8064 0.173239C31.6701 0.921813 32.0678 3.66659 34.7724 4.56487C37.0792 5.36335 40.0224 4.51497 42.5679 4.76449C44.7156 4.96411 46.5452 5.96221 47.6588 7.11003C48.7724 8.25784 49.4088 9.60528 49.9656 10.9527C50.5225 12.2003 50.9997 13.4979 50.8406 14.7954C50.6815 16.0929 49.727 17.3904 47.8974 18.0392C45.5906 18.8377 42.6474 18.3386 40.1019 17.8895C37.4769 17.4903 34.3746 17.2906 32.5451 18.5383C29.6814 20.5345 33.1019 24.1276 30.4769 26.2735C29.3632 27.1718 27.295 27.5711 25.545 27.1219C23.8746 26.6728 22.7609 25.525 22.92 24.3771C23.0791 23.6286 23.6359 22.9798 23.9541 22.2811C24.2723 21.5825 24.2723 20.6842 23.3973 20.235C22.4427 19.736 20.9314 19.9356 19.8177 20.3348C18.7041 20.7341 17.8291 21.3329 16.5563 21.5825C15.3631 21.832 13.6927 21.5326 13.454 20.7341C12.8972 20.1851 12.7381 19.2868 11.704 19.1371C9.23811 18.688 9.3972 21.832 9.63584 23.4289C9.87448 25.0259 9.87447 27.0221 7.56764 27.7208C6.05627 28.1699 4.14717 27.6709 3.19262 26.8225C2.4767 26.024 0.249415 24.427 2.63579 21.7821Z" fill="#E3F2FD"/>
                                                    <path d="M49.966 11.0023C49.4092 9.65484 48.8524 8.35731 47.6592 7.15959C46.5456 6.01177 44.716 5.01368 42.5683 4.81406C39.9432 4.56453 37.0796 5.41291 34.7728 4.61444C31.9886 3.66624 31.6705 0.971374 28.8068 0.222799C26.6591 -0.326155 24.3522 0.522229 22.6022 1.47042C20.9318 2.41862 19.2613 3.56643 17.034 3.86586C14.4885 4.2152 11.8635 3.267 9.23851 3.46662C7.09077 3.61634 5.26121 4.56453 3.98847 5.66244C2.95438 6.61063 2.31801 7.75845 1.68164 8.85636C2.55665 9.75465 3.27256 10.7527 3.98847 11.7508C4.62484 12.6491 5.26121 13.5973 5.89758 14.4956C6.4544 15.2442 6.93167 16.0427 6.69304 16.7912C6.53394 17.3901 5.97712 17.8892 5.89758 18.4381C5.81803 19.037 6.61349 20.0351 7.3294 19.6358C8.99987 18.7874 8.76123 17.0408 10.2726 16.0427C11.784 15.0945 14.3294 14.5954 16.159 15.2941C17.909 15.9429 19.0227 17.5398 21.0113 17.3402C22.7613 17.1406 24.1931 15.5935 25.625 16.1924C26.9773 16.7413 26.0227 18.5878 27.6136 18.7874C28.4091 18.8873 29.125 18.3383 29.2045 17.8392C29.3636 17.3402 29.125 16.7912 29.3636 16.2922C29.6818 15.4438 30.9546 14.845 32.3864 14.5954C33.7387 14.3459 35.1705 14.4457 36.6023 14.4457C41.3751 14.4956 46.2274 13.8968 50.6024 12.699C50.5229 12.1501 50.2842 11.5512 49.966 11.0023Z" fill="white"/>
                                                    <path opacity="0.5" d="M2.55683 18.4387C3.27275 19.4867 3.59093 20.7843 2.63638 21.7824C0.170455 24.4273 2.39774 26.0243 3.35229 26.8727C4.30684 27.7211 6.21595 28.2201 7.72732 27.771C10.0342 27.1222 10.1137 25.0761 9.79552 23.4791C9.47733 21.8822 9.39779 18.7382 11.8637 19.1873C12.8183 19.337 12.9774 20.2353 13.6137 20.7843C13.8524 21.5827 15.5228 21.8822 16.716 21.6326C17.9092 21.3831 18.8638 20.7843 19.9774 20.385C21.091 19.9858 22.6024 19.7363 23.557 20.2852C24.432 20.7344 24.5115 21.6326 24.1138 22.3313C23.7956 23.03 23.1592 23.6788 23.0797 24.4273C22.8411 25.5751 23.9547 26.7729 25.7047 27.1721C27.3752 27.6212 29.5229 27.222 30.6366 26.3237C33.182 24.1778 29.8411 20.5846 32.7048 18.5884C34.4548 17.3408 37.6366 17.5404 40.2616 17.9397C42.8866 18.3389 45.7503 18.8879 48.0571 18.0894C49.8867 17.4406 50.8412 16.1431 51.0003 14.8456C51.0003 14.646 51.0003 14.4463 51.0003 14.2467C49.9662 14.4463 49.0117 14.6959 48.0571 14.9454C43.7616 15.9435 38.9093 16.9915 34.5343 16.193C33.6593 16.0433 32.7048 16.2429 31.9888 16.742C31.2729 17.241 30.8752 17.8399 30.557 18.4387C29.8411 19.5366 29.2047 20.6845 28.4888 21.7824C28.3297 22.0818 27.932 22.4311 27.4547 22.3313C26.9774 22.2814 26.9774 21.8822 26.8979 21.6326C26.7388 20.5846 25.7843 19.5865 24.3524 19.0376C22.9206 18.4886 21.091 18.3389 19.5797 18.6883C18.9433 18.838 18.3069 19.0875 17.591 19.2372C16.9547 19.3869 16.1592 19.4368 15.5228 19.2372C14.8865 19.0376 14.966 18.5385 14.966 18.0894C14.8865 17.241 12.8183 17.3907 11.8637 17.6402C10.9092 17.9397 10.1932 18.4387 9.63642 18.9877C8.36369 20.1854 7.32959 21.433 6.53413 22.7805C6.37504 23.03 6.1364 23.3793 5.65913 23.3793C4.94321 23.3793 4.94321 22.6807 5.1023 22.2315C5.97731 20.1355 4.62503 17.9896 3.35229 15.9934C2.63638 14.8955 1.84092 13.7477 0.250001 13.1488C0.250001 13.1488 0.250001 13.1488 0.170455 13.1488C0.0909088 13.8974 0.170455 14.596 0.409093 15.2947C0.806822 16.4425 1.84092 17.3907 2.55683 18.4387Z" fill="#BBDEFB"/>
                                                    <path d="M35.7271 20.7333C36.1664 20.7333 36.5226 20.5098 36.5226 20.2342C36.5226 19.9586 36.1664 19.7352 35.7271 19.7352C35.2878 19.7352 34.9316 19.9586 34.9316 20.2342C34.9316 20.5098 35.2878 20.7333 35.7271 20.7333Z" fill="#E3F2FD"/>
                                                    <path d="M15.7608 2.51867C16.2001 2.51867 16.5563 2.29524 16.5563 2.01962C16.5563 1.744 16.2001 1.52057 15.7608 1.52057C15.3215 1.52057 14.9653 1.744 14.9653 2.01962C14.9653 2.29524 15.3215 2.51867 15.7608 2.51867Z" fill="#E3F2FD"/>
                                                    <path d="M6.05642 10.9022C6.27608 10.9022 6.45415 10.7905 6.45415 10.6527C6.45415 10.5149 6.27608 10.4032 6.05642 10.4032C5.83676 10.4032 5.65869 10.5149 5.65869 10.6527C5.65869 10.7905 5.83676 10.9022 6.05642 10.9022Z" fill="#E3F2FD"/>
                                                    <path d="M44.795 12.1995C45.6737 12.1995 46.3859 11.7526 46.3859 11.2014C46.3859 10.6502 45.6737 10.2033 44.795 10.2033C43.9164 10.2033 43.2041 10.6502 43.2041 11.2014C43.2041 11.7526 43.9164 12.1995 44.795 12.1995Z" fill="#E3F2FD"/>
                                                    </svg> : index() === 8 || index() === 18 || index() === 41 || index() === 63 || index() === 76 ? <svg class="absolute left-1/2 transform -translate-x-1/2 top-0 z-30" width="56" height="25" viewBox="0 0 56 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M0.768929 12.0717C-0.625796 10.2499 -0.0121165 7.88546 1.71734 6.17997C3.50259 4.47448 6.18046 3.38916 8.96991 2.61394C12.2615 1.76119 15.7204 1.2573 19.1793 0.792164C24.5908 0.0557016 30.5603 -0.642 35.3581 1.2573C37.0318 1.91624 38.5381 2.88527 40.4349 3.07907C42.778 3.31164 44.9538 2.26509 47.297 2.18757C50.7559 2.03252 53.7685 3.97058 54.9958 6.21873C56.2232 8.46688 56.0558 10.9088 55.8327 13.312C55.7769 13.971 55.7211 14.6299 55.3306 15.2501C54.94 15.7927 54.1032 16.2966 53.1548 16.2966C51.7043 16.2966 50.5327 15.1338 49.138 15.3664C47.9106 15.5602 47.5201 16.6067 47.1854 17.4207C46.8506 18.2735 45.7906 19.2037 44.6191 18.8936C44.0054 18.6998 43.7265 18.2347 43.1686 17.9246C41.9412 17.1494 39.8212 17.8083 39.0402 18.8161C38.2033 19.8239 38.2033 21.0255 37.9244 22.1496C37.5897 23.2737 36.7528 24.514 35.1907 24.8241C33.5171 25.1342 31.7876 24.2427 31.0624 23.1574C30.3371 22.0721 30.3371 20.8317 30.2255 19.6301C30.1139 18.4285 29.835 17.1494 28.7192 16.2579C26.5992 14.5136 22.5266 14.94 19.6256 16.0253C16.7246 17.1106 14.0467 18.6998 10.7552 18.9324C6.34783 19.2037 3.78153 15.9478 0.768929 12.0717Z" fill="#E3F2FD"/>
                                                    <path d="M45.1214 11.2966C48.3571 10.0175 52.4297 10.4438 55.8887 9.55233C55.7771 8.38949 55.5539 7.26542 54.9402 6.1801C53.7129 3.93196 50.6445 1.9939 47.2414 2.14894C44.8982 2.26523 42.6667 3.27302 40.3793 3.04045C38.4825 2.84664 36.9762 1.87761 35.3025 1.21867C30.5047 -0.680625 24.591 0.0170763 19.1795 0.7923C15.7206 1.25743 12.2617 1.76133 9.02591 2.65284C6.23646 3.42806 3.50279 4.51337 1.77334 6.21887C1.66176 6.33515 1.49439 6.49019 1.38281 6.60648C3.33543 8.93215 6.68277 10.8314 10.5322 10.9865C13.2101 11.064 15.7764 10.3276 18.3985 9.90118C20.8532 9.51357 23.3637 9.43604 25.8184 9.62985C27.3247 9.74613 28.9426 10.0175 29.8352 10.8702C31.2857 12.1493 30.5605 14.2037 32.0668 15.444C33.1825 16.4131 35.3025 16.5681 36.9762 16.103C38.6499 15.6766 39.9888 14.7463 41.1604 13.8548C42.3877 12.8858 43.6151 11.9168 45.1214 11.2966Z" fill="white"/>
                                                    <path opacity="0.5" d="M10.8111 18.9321C14.1027 18.6995 16.7806 17.1103 19.6816 16.025C22.5826 14.9397 26.6552 14.5133 28.7752 16.2576C29.891 17.1491 30.1699 18.4282 30.2815 19.6298C30.3931 20.8314 30.3931 22.0718 31.1183 23.1571C31.8436 24.2424 33.573 25.1339 35.2467 24.8238C36.8646 24.5137 37.7014 23.3121 37.9804 22.1493C38.3151 21.0252 38.3151 19.8236 39.0962 18.8158C39.933 17.808 41.9972 17.1878 43.2245 17.9243C43.7266 18.2344 44.0056 18.7383 44.6751 18.8933C45.8466 19.2422 46.9066 18.2732 47.2414 17.4204C47.5761 16.5677 47.9666 15.5599 49.194 15.3661C50.5887 15.1335 51.7603 16.2576 53.2108 16.2963C54.1592 16.2963 54.996 15.7924 55.3865 15.211C55.7771 14.6296 55.8329 13.9319 55.8886 13.273C55.9444 12.7303 56.0002 12.1877 56.0002 11.645C55.3865 11.9163 54.7729 12.2264 54.2708 12.5753C53.6013 13.0404 52.7087 13.6606 51.7603 13.428C51.3139 13.3117 50.9792 13.0404 50.5887 12.8466C49.194 12.2264 47.3529 13.1954 46.9624 14.3195C46.795 14.8622 46.6835 15.5599 45.9024 15.7149C45.2887 15.8312 44.6751 15.4824 44.5077 15.0947C44.3403 14.7071 45.1772 13.8156 44.5635 13.8156C40.714 13.8156 38.2593 17.808 35.1351 19.8236C34.6888 20.1337 34.1309 20.4438 33.4615 20.405C32.792 20.3663 32.2899 19.8624 32.1225 19.3972C31.9552 18.9321 32.0667 18.4282 32.011 17.9631C31.7878 16.3739 29.9468 15.1723 28.2731 14.087C26.8226 13.1954 25.3163 12.2652 23.4195 11.8388C21.3553 11.3737 19.0679 11.5675 17.0595 12.1877C15.3301 12.6916 13.8237 13.5055 12.1501 14.087C10.4764 14.6684 8.52379 15.056 6.73854 14.7071C4.9533 14.3195 3.44699 13.2342 1.60596 13.1567C4.22804 16.5289 6.79433 19.2034 10.8111 18.9321Z" fill="#BBDEFB"/>
                                                    <path d="M8.80227 8.77767C9.11039 8.77767 9.36016 8.60413 9.36016 8.39005C9.36016 8.17598 9.11039 8.00244 8.80227 8.00244C8.49416 8.00244 8.24438 8.17598 8.24438 8.39005C8.24438 8.60413 8.49416 8.77767 8.80227 8.77767Z" fill="#E3F2FD"/>
                                                    <path d="M50.0304 17.847C50.1845 17.847 50.3094 17.7603 50.3094 17.6532C50.3094 17.5462 50.1845 17.4594 50.0304 17.4594C49.8764 17.4594 49.7515 17.5462 49.7515 17.6532C49.7515 17.7603 49.8764 17.847 50.0304 17.847Z" fill="#E3F2FD"/>
                                                    <path d="M40.8257 1.56766C41.442 1.56766 41.9415 1.22058 41.9415 0.792436C41.9415 0.364291 41.442 0.0172119 40.8257 0.0172119C40.2095 0.0172119 39.71 0.364291 39.71 0.792436C39.71 1.22058 40.2095 1.56766 40.8257 1.56766Z" fill="#E3F2FD"/>
                                                    </svg> : index() === 10 || index() === 20 || index() === 43 || index() === 65 || index() === 78 ? <svg class="absolute left-1/2 transform -translate-x-1/2 top-0 z-30" width="44" height="25" viewBox="0 0 44 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M42.8659 14.0463C42.0905 16.6689 39.4414 18.8286 36.2107 19.7028C33.9492 20.3199 31.4293 20.3713 29.2324 21.2455C27.5524 21.914 26.2602 23.0453 24.5802 23.7652C22.9648 24.4851 20.7034 24.6908 19.4111 23.611C18.5065 22.8396 18.3773 21.7083 17.6665 20.8341C16.3096 19.1372 13.2728 18.9315 10.8175 19.3429C8.36213 19.7543 5.97141 20.6799 3.45148 20.577C0.931536 20.4742 1.64229 18.8801 0.0915564 11.1153C-0.489968 8.23558 1.77152 5.30449 4.80837 3.60755C7.90983 1.96202 11.6574 1.29353 15.2758 0.830722C17.9896 0.470764 20.768 0.21365 23.5464 0.0593825C25.2909 -0.0434628 27.1001 -0.0948854 28.5863 0.625032C30.6539 1.60206 31.3646 3.76181 33.1738 4.94453C34.8538 6.02441 37.1799 6.2301 39.1183 7.05286C42.0905 8.38985 43.5767 11.3724 42.8659 14.0463Z" fill="#E3F2FD"/>
                                                    <path d="M42.6721 10.7551C42.0905 9.2124 40.8629 7.87541 39.1183 7.10407C37.2445 6.28131 34.8538 6.07562 33.1738 4.99574C31.3 3.7616 30.5893 1.65327 28.5863 0.67624C27.1001 -0.0436769 25.2263 0.00774575 23.5464 0.110591C20.768 0.264859 18.0542 0.521972 15.2758 0.830508C11.6574 1.29331 7.90983 1.96181 4.80837 3.60733C1.77152 5.30428 -0.489968 8.23537 0.0915564 11.115C0.0915564 11.115 0.0915564 11.115 0.0915564 11.1665C1.12538 11.3207 2.09458 11.3207 3.12841 11.1665C4.54991 10.9608 5.84219 10.3951 7.19908 10.1894C8.62058 9.98374 10.3005 10.2409 11.0113 11.2179C11.5928 11.9378 11.4636 12.9663 12.0451 13.6347C13.7251 15.6402 18.4419 13.5319 20.4449 15.3317C21.0264 15.8459 21.1557 16.5144 21.608 17.0801C22.8356 18.5713 25.614 18.777 27.6817 18.0571C29.7493 17.3372 31.3 15.9488 32.98 14.766C35.7584 12.8634 39.1183 11.5264 42.6721 10.7551Z" fill="white"/>
                                                    <path opacity="0.5" d="M42.2842 15.3325C38.7305 15.641 35.1767 16.5152 32.0753 17.9036C30.4599 18.6235 28.9092 19.4977 27.1646 20.0633C25.42 20.629 23.417 20.8347 21.737 20.269C19.0233 19.3434 17.5371 16.5666 14.6295 16.2581C12.368 16.0009 10.0419 17.3379 7.9743 16.6694C6.81125 16.3095 6.03588 15.3839 5.00206 14.7668C3.7744 14.0983 2.22367 13.944 0.737549 14.1497C1.51291 19.3434 1.31907 20.5261 3.51594 20.5776C6.03588 20.6804 8.42659 19.7548 10.8819 19.3434C13.3372 18.932 16.3741 19.1377 17.731 20.8347C18.4417 21.7089 18.571 22.8402 19.4756 23.6115C20.7678 24.6914 23.0293 24.4857 24.7093 23.7658C26.3246 23.0458 27.6815 21.9145 29.3615 21.2461C31.4937 20.3719 34.0137 20.3204 36.3398 19.7034C38.9243 18.9835 41.1858 17.3379 42.2842 15.3325Z" fill="#BBDEFB"/>
                                                    <path d="M23.0941 14.0468C23.451 14.0468 23.7403 13.8166 23.7403 13.5326C23.7403 13.2486 23.451 13.0184 23.0941 13.0184C22.7373 13.0184 22.448 13.2486 22.448 13.5326C22.448 13.8166 22.7373 14.0468 23.0941 14.0468Z" fill="#E3F2FD"/>
                                                    <path d="M35.306 3.29926C35.4844 3.29926 35.629 3.18415 35.629 3.04215C35.629 2.90015 35.4844 2.78503 35.306 2.78503C35.1276 2.78503 34.9829 2.90015 34.9829 3.04215C34.9829 3.18415 35.1276 3.29926 35.306 3.29926Z" fill="#E3F2FD"/>
                                                    <path d="M12.4971 24.1254C13.2108 24.1254 13.7894 23.665 13.7894 23.097C13.7894 22.529 13.2108 22.0685 12.4971 22.0685C11.7834 22.0685 11.2048 22.529 11.2048 23.097C11.2048 23.665 11.7834 24.1254 12.4971 24.1254Z" fill="#E3F2FD"/>
                                                    </svg> : "") }
                                                <img class="w-16 h-full rounded-full" alt="jackpot spinner" src={val || "https://avatars.akamai.steamstatic.com/fef49e7fa7e1997310d705b2a6158ff8dc1cdfeb_full.jpg"} />
                                            </div>
                                        )}
                                    </For>
                                </div>
                            </div>
                            {/* <div class="absolute right-0 h-full w-40" style={{background: "linear-gradient(-90deg, #191E2C 0%, rgba(25, 29, 42, 0) 100%)"}}></div> */}
                        </div>
                        <svg width="34" height="31" viewBox="0 0 34 31" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g filter="url(#filter0_d_173_40853)">
                            <path d="M17.002 0L29.9923 22.5H4.01157L17.002 0Z" fill="url(#paint0_linear_173_40853)"/>
                            </g>
                            <defs>
                            <filter id="filter0_d_173_40853" x="0.0117188" y="0" width="33.9805" height="30.5" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
                            <feOffset dy="4"/>
                            <feGaussianBlur stdDeviation="2"/>
                            <feComposite in2="hardAlpha" operator="out"/>
                            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_173_40853"/>
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_173_40853" result="shape"/>
                            </filter>
                            <linearGradient id="paint0_linear_173_40853" x1="17.002" y1="0" x2="17.002" y2="30" gradientUnits="userSpaceOnUse">
                            <stop offset="0.00520833" stop-color="#FFED01"/>
                            <stop offset="0.557292" stop-color="#FCAE00"/>
                            </linearGradient>
                            </defs>
                        </svg>
                    </div>
                </div>
            </Show>
            <div class="flex justify-center items-center xll:items-start flex-col xll:flex-row gap-12 xll:gap-8 fourk:h-200 xll:h-160 overflow-hidden pt-4">
                <div class="rounded-full center relative max-w-full fourk:w-160 fourk:h-160 sm:w-120 sm:h-120 w-72 h-72 p-5">
                    { SNOWMODE && <JackpotSnow />}
                    <img class="absolute w-full h-full left-0 top-0 z-0" src={JackpotGameBg} alt="JackpotGameBg" />
                    <div class="absolute w-full h-full p-10 overflow-hidden animate-spin-slow center">
                        <div class="absolute p-10 center z-10 w-full h-full">
                            <img alt="wheel-splash" class="w-full h-full" src={WheelSplash} />
                            {/* <img class="w-full h-full" src={DarkWheel} /> */}
                        </div>
                        <ChartJS game={game} backgroundColors={backgroundColors} />
                    </div>

                    <div class="relative center w-full h-full">
                        <img alt="middle" src={Middle} class="w-7/12" />
                        <div class="flex flex-col gap-5 absolute">
                            <div class="center flex-col gap-2">
                                <p class="text-14 sm:text-16 text-gray-8c font-bold font-Oswald">00:{`0${game?.status == "counting" ? (game?.counter || 0) : 0}`.slice(-2)}</p>
                                <div class="center gap-2">
                                    <Coin />
                                    <p class="text-16 sm:text-22 text-white font-bold font-Oswald"><Countup props={game?.pot || 0} /></p>
                                </div>
                            </div>
                            <NavLink href={URL.GAMEMODES.JACKPOT_DEPOSIT} class="relative center hover w-20 sm:w-36 h-10 overflow-hidden rounded-2 bg-cover group scrolling-btn-wrapper" style={{"background-image": `url(${YellowButtonBg})`}}>
                                <div class="scrolling-btn-image hidden group-hover:block absolute left-0 top-0" />
                                <p class="absolute text-dark-16 text-12 sm:text-14 font-medium font-Oswald uppercase">{i18n.t('jackpot.deposit')}</p>
                            </NavLink>
                        </div>
                    </div>
                    {game?.hash ? <div class="flex items-center gap-2 absolute -bottom-8" onClick={() => {
                        navigator.clipboard.writeText(game?.hash);
                        toastr({msg: "Copied"})
                    }}>
                        <p class="text-gray-8c text-14 font-medium font-Oswald w-64 truncate sm:w-auto">{game?.hash || "No hash"}</p>
                        <svg class="w-4" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 460 460" style={{"enable-background":"new 0 0 460 460"}} fill="#8C98A9">
                            <g>
                                <g>
                                    <g>
                                        <path d="M425.934,0H171.662c-18.122,0-32.864,14.743-32.864,32.864v77.134h30V32.864c0-1.579,1.285-2.864,2.864-2.864h254.272     c1.579,0,2.864,1.285,2.864,2.864v254.272c0,1.58-1.285,2.865-2.864,2.865h-74.729v30h74.729     c18.121,0,32.864-14.743,32.864-32.865V32.864C458.797,14.743,444.055,0,425.934,0z"/>
                                        <path d="M288.339,139.998H34.068c-18.122,0-32.865,14.743-32.865,32.865v254.272C1.204,445.257,15.946,460,34.068,460h254.272     c18.122,0,32.865-14.743,32.865-32.864V172.863C321.206,154.741,306.461,139.998,288.339,139.998z M288.341,430H34.068     c-1.58,0-2.865-1.285-2.865-2.864V172.863c0-1.58,1.285-2.865,2.865-2.865h254.272c1.58,0,2.865,1.285,2.865,2.865v254.273h0.001     C291.206,428.715,289.92,430,288.341,430z"/>
                                    </g>
                                </g>
                            </g>
                        </svg>
                    </div> : <p class="text-gray-8c text-14 font-medium font-Oswald absolute -bottom-8">No hash</p>}
                </div>
                <div class="relative w-full max-w-4xl">
                    { SNOWMODE && <>
                        <svg class="absolute left-2 -top-2 z-30" width="63" height="21" viewBox="0 0 63 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M61.585 10.1868C63.1402 8.64955 62.4559 6.65442 60.5275 5.21532C58.5369 3.77621 55.551 2.86042 52.4407 2.20628C48.7705 1.48672 44.9137 1.06153 41.0569 0.66905C35.0229 0.0476174 28.3668 -0.541108 23.0171 1.06153C21.1509 1.61755 19.4713 2.43523 17.3563 2.59876C14.7437 2.795 12.3176 1.91191 9.70495 1.8465C5.84816 1.71567 2.48902 3.35102 1.12048 5.24802C-0.248058 7.14503 -0.0614395 9.20556 0.187386 11.2334C0.249592 11.7894 0.311798 12.3454 0.747242 12.8687C1.18269 13.3266 2.11578 13.7518 3.17329 13.7518C4.79065 13.7518 6.09698 12.7706 7.65214 12.9669C9.02068 13.1304 9.45612 14.0135 9.82936 14.7003C10.2026 15.4199 11.3845 16.2049 12.6909 15.9432C13.3751 15.7797 13.6861 15.3872 14.3082 15.1255C15.6768 14.4714 18.0406 15.0274 18.9115 15.8778C19.8446 16.7282 19.8446 17.7421 20.1556 18.6906C20.5288 19.6391 21.4619 20.6857 23.2037 20.9474C25.0699 21.209 26.9983 20.4568 27.807 19.541C28.6157 18.6252 28.6157 17.5785 28.7401 16.5646C28.8645 15.5507 29.1755 14.4714 30.4196 13.7191C32.7835 12.2473 37.3245 12.6071 40.5593 13.5229C43.794 14.4387 46.7799 15.7797 50.4501 15.9759C55.3644 16.2049 58.2259 13.4575 61.585 10.1868Z" fill="#E3F2FD"/>
                            <path d="M12.1306 9.53213C8.52268 8.4528 3.98162 8.81258 0.124832 8.06032C0.249245 7.07911 0.49807 6.13061 1.18234 5.21481C2.55088 3.31781 5.97223 1.68246 9.76681 1.81329C12.3795 1.91141 14.8677 2.76179 17.4182 2.56555C19.5332 2.40202 21.2128 1.58434 23.079 1.02832C28.4287 -0.574316 35.0226 0.0144091 41.0566 0.668548C44.9134 1.06103 48.7702 1.48622 52.3781 2.23848C55.4884 2.89262 58.5366 3.80842 60.4649 5.24752C60.5894 5.34564 60.776 5.47647 60.9004 5.57459C58.7232 7.53701 54.9908 9.13965 50.6986 9.27048C47.7127 9.33589 44.8512 8.71446 41.9275 8.35468C39.1904 8.02761 36.3911 7.9622 33.654 8.12573C31.9745 8.22386 30.1705 8.4528 29.1752 9.17236C27.5578 10.2517 28.3665 11.9852 26.6869 13.0318C25.4428 13.8495 23.079 13.9803 21.2128 13.5878C19.3466 13.228 17.8536 12.4431 16.5473 11.6908C15.1788 10.8731 13.8102 10.0554 12.1306 9.53213Z" fill="white"/>
                            <path opacity="0.5" d="M50.3873 15.9757C46.7172 15.7794 43.7313 14.4384 40.4965 13.5226C37.2618 12.6068 32.7207 12.2471 30.3569 13.7189C29.1128 14.4711 28.8017 15.5505 28.6773 16.5644C28.5529 17.5783 28.5529 18.6249 27.7442 19.5407C26.9356 20.4565 25.0072 21.2088 23.141 20.9471C21.337 20.6855 20.4039 19.6715 20.0929 18.6903C19.7196 17.7418 19.7196 16.7279 18.8487 15.8775C17.9156 15.0272 15.614 14.5038 14.2455 15.1253C13.6856 15.3869 13.3746 15.8121 12.6281 15.943C11.3218 16.2373 10.1399 15.4196 9.76661 14.7001C9.39338 13.9805 8.95793 13.1302 7.58939 12.9666C6.03424 12.7704 4.7279 13.7189 3.11053 13.7516C2.05303 13.7516 1.11993 13.3264 0.68449 12.8358C0.249046 12.3452 0.186844 11.7565 0.124638 11.2004C0.0624313 10.7425 0.000221252 10.2846 0.000221252 9.82675C0.68449 10.0557 1.36876 10.3174 1.92862 10.6117C2.67509 11.0042 3.67039 11.5275 4.7279 11.3313C5.22555 11.2332 5.59879 11.0042 6.03424 10.8407C7.58939 10.3174 9.6422 11.135 10.0776 12.0835C10.2643 12.5414 10.3887 13.1302 11.2596 13.261C11.9438 13.3591 12.6281 13.0647 12.8147 12.7377C13.0013 12.4106 12.0682 11.6583 12.7525 11.6583C17.0447 11.6583 19.7818 15.0272 23.2654 16.7279C23.763 16.9896 24.3851 17.2512 25.1316 17.2185C25.878 17.1858 26.4379 16.7606 26.6245 16.3681C26.8111 15.9757 26.6867 15.5505 26.7489 15.158C26.9978 13.817 29.0506 12.8031 30.9168 11.8873C32.5341 11.135 34.2137 10.3501 36.3287 9.99029C38.6303 9.5978 41.1808 9.76134 43.4202 10.2846C45.3486 10.7098 47.0282 11.3967 48.8944 11.8873C50.7606 12.3779 52.9378 12.705 54.9284 12.4106C56.919 12.0835 58.5986 11.1677 60.6514 11.1023C57.7277 13.9478 54.8662 16.2046 50.3873 15.9757Z" fill="#BBDEFB"/>
                            <path d="M52.6274 7.40621C52.2839 7.40621 52.0054 7.25978 52.0054 7.07914C52.0054 6.89851 52.2839 6.75208 52.6274 6.75208C52.971 6.75208 53.2495 6.89851 53.2495 7.07914C53.2495 7.25978 52.971 7.40621 52.6274 7.40621Z" fill="#E3F2FD"/>
                            <path d="M6.65723 15.0591C6.48545 15.0591 6.3462 14.9859 6.3462 14.8956C6.3462 14.8053 6.48545 14.7321 6.65723 14.7321C6.82901 14.7321 6.96826 14.8053 6.96826 14.8956C6.96826 14.9859 6.82901 15.0591 6.65723 15.0591Z" fill="#E3F2FD"/>
                            <path d="M16.9209 1.32311C16.2338 1.32311 15.6768 1.03024 15.6768 0.668971C15.6768 0.3077 16.2338 0.0148315 16.9209 0.0148315C17.608 0.0148315 18.165 0.3077 18.165 0.668971C18.165 1.03024 17.608 1.32311 16.9209 1.32311Z" fill="#E3F2FD"/>
                        </svg>
                        <svg class="absolute right-2 sm:right-10 -top-4 z-30" width="275" height="48" viewBox="0 0 275 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M269.917 13.1645C266.519 10.16 261.711 8.57581 256.903 7.81102C241.325 5.4074 225.554 10.7609 209.784 10.7063C197.475 10.6517 185.679 6.9916 173.498 6.3907C161.382 5.78979 149.971 10.6517 137.854 10.5424C127.725 10.4331 117.788 6.82772 107.659 7.64713C99.3251 8.35729 92.145 11.3618 83.6186 9.72299C79.5157 8.90357 75.4769 7.70176 71.3098 7.31937C62.3347 6.49995 53.7442 9.5591 44.9614 10.3785C36.1786 11.1979 27.2034 10.7609 18.677 8.73969C14.6382 7.75639 10.1506 7.15549 6.36826 8.79432C5.72718 9.06745 5.0861 9.44985 4.50912 9.83224C0.919066 12.5636 -0.491314 23.5438 0.149768 27.477C0.406201 29.0066 1.62426 34.9064 4.82966 33.1036C6.11183 32.3935 6.75291 31.0278 7.00934 29.7714C7.4581 28.0233 7.97096 23.5438 10.4712 23.5438C13.7407 23.5984 15.9204 27.4224 19.3822 26.7668C22.3312 26.2206 25.4725 25.0734 28.5497 26.002C32.6526 27.3131 33.7425 31.3556 36.6914 33.7045C40.6661 36.8183 45.5384 22.5605 50.7952 27.0946C52.7185 28.7334 52.3979 31.137 52.3338 33.2675C52.2697 35.1249 52.5261 38.621 55.411 39.0034C56.3085 39.1127 57.2701 38.7849 57.783 38.184C60.9884 34.6332 56.4367 29.6621 59.7704 26.2206C63.1681 22.6698 69.8354 25.0734 74.0665 25.8382C77.336 26.4391 79.8362 26.1113 83.1058 26.1113C84.6443 26.1113 85.2213 26.9307 85.1572 28.1871C85.029 31.1917 83.2981 35.1795 85.4136 37.9655C85.9906 38.7849 87.0163 39.3312 88.1703 39.1127C89.3242 38.9488 90.0935 38.0748 90.4141 37.2007C91.0552 35.0702 90.0935 32.612 90.0294 30.4269C89.9653 28.0233 89.6448 24.4178 93.7477 24.9095C95.9915 25.1826 98.043 26.1113 100.223 26.6576C104.518 27.7501 109.39 24.9095 113.942 23.7077C116.378 23.0521 118.878 24.5271 119.006 26.7122C119.135 29.0066 119.006 32.175 118.301 36.5452C116.506 47.3615 125.93 46.8152 125.097 41.7348C124.584 38.5664 124.712 32.7759 124.904 28.9519C125.097 29.3343 125.353 29.7167 125.545 30.0991C128.43 34.4693 133.815 32.612 136.38 29.1158C138.431 26.3844 139.521 22.8883 144.009 23.3253C149.458 23.8169 154.522 25.9474 159.971 26.1659C165.036 26.3844 169.459 24.254 174.396 23.653C179.012 23.0521 183.884 23.4892 188.307 24.9095C192.41 26.2206 196.385 28.6788 201.001 28.2418C202.219 28.1325 204.014 27.1492 205.168 27.9686C206.386 28.8973 205.488 31.2463 205.232 32.3389C204.975 33.7045 204.975 35.1795 205.36 36.5452C205.552 37.2553 205.873 38.0201 206.45 38.5664C207.027 39.1127 208.053 39.3858 208.822 39.1127C209.784 38.7849 210.168 37.8016 210.36 36.873C210.937 33.6499 210.809 31.5741 210.809 28.2964C210.809 27.5862 210.873 26.8215 211.514 26.3298C212.027 25.9474 212.861 25.8928 213.566 25.9474C217.156 26.0567 219.72 25.8382 222.99 27.0946C224.464 27.6955 225.49 28.8973 225.49 30.3176C225.554 32.4481 225.362 35.2887 224.785 39.0034C223.054 49.5466 232.221 49.0003 231.388 44.0838C230.939 41.3524 231.003 36.5998 231.132 32.9398C231.196 31.4648 232.67 30.3176 234.401 30.4269H234.465C238.76 30.7 242.992 24.5271 247.287 25.2919C251.646 26.0567 256.198 31.137 259.788 28.8973C261.07 28.1325 261.903 26.8215 263.314 26.2206C264.596 25.6196 265.429 26.2752 265.814 27.3677C267.096 31.0824 268.122 34.961 268.314 38.8396C268.314 39.2219 268.443 39.659 268.763 39.9867C270.109 41.3524 272.289 39.5497 272.994 37.9109C275.943 30.5908 276.2 18.7912 269.917 13.1645Z" fill="white"/>
                            <path d="M57.9103 32.8844C57.3333 33.4853 56.4358 33.8131 55.5383 33.7038C52.6534 33.3214 52.397 29.8799 52.4611 27.9679C52.5252 25.8375 52.8458 23.4338 50.9225 21.795C45.6656 17.2063 40.7934 31.5187 36.8187 28.405C33.8056 26.056 32.7158 22.0135 28.677 20.7024C25.6639 19.7192 22.5226 20.8663 19.5095 21.4672C16.0477 22.1228 13.868 18.2988 10.5985 18.2442C8.09825 18.1896 7.52128 22.7237 7.13663 24.4718C6.81609 25.6736 6.23912 27.0939 4.95695 27.8041C1.81565 29.5521 0.533489 23.8162 0.277056 22.232C0.0847314 24.3625 0.0847314 26.2745 0.277056 27.5309C0.533489 29.0605 1.75154 34.9603 4.95695 33.1576C6.23912 32.4474 6.8802 31.0817 7.13663 29.8253C7.58539 28.0772 8.09825 23.5977 10.5985 23.5977C13.868 23.6523 16.0477 27.4763 19.5095 26.8207C22.4585 26.2745 25.5998 25.1273 28.677 26.056C32.7799 27.367 33.8697 31.4095 36.8187 33.7585C40.7934 36.8722 45.6656 22.6144 50.9225 27.1485C52.8458 28.7873 52.5252 31.191 52.4611 33.3214C52.397 35.1788 52.6534 38.675 55.5383 39.0574C56.4358 39.1666 57.3974 38.8388 57.9103 38.2379C59.7053 36.2713 59.0642 33.8677 58.7437 31.5734C58.5514 32.0104 58.2949 32.4474 57.9103 32.8844Z" fill="#D9F1FF"/>
                            <path d="M119.07 21.4126C118.942 19.2275 116.441 17.7525 114.005 18.4081C109.453 19.6099 104.581 22.4505 100.286 21.3579C98.1063 20.8117 96.0549 19.883 93.8111 19.6099C89.7082 19.0636 90.0287 22.7236 90.0928 25.1273C90.0928 25.7282 90.1569 26.3837 90.2852 26.9846C90.6698 25.6189 91.5673 24.6356 93.8111 24.9634C96.0549 25.2365 98.1063 26.1652 100.286 26.7115C104.581 27.804 109.453 24.9634 114.005 23.7616C116.249 23.1607 118.557 24.3625 119.006 26.2198C119.134 24.3078 119.134 22.7236 119.07 21.4126Z" fill="#D9F1FF"/>
                            <path d="M124.839 38.458C123.621 40.6431 119.518 40.5338 118.428 36.2183C118.428 36.3275 118.364 36.4368 118.364 36.546C116.569 47.3623 125.993 46.816 125.16 41.7357C124.967 40.8616 124.903 39.7144 124.839 38.458Z" fill="#D9F1FF"/>
                            <path d="M85.2204 22.8336C85.2846 21.5771 84.7076 20.7577 83.169 20.7577C79.9636 20.7577 77.3993 21.0855 74.1297 20.4846C69.8986 19.7198 63.1672 17.3162 59.8336 20.867C57.9745 22.8336 58.5515 25.2372 58.872 27.6408C59.0643 27.1491 59.3849 26.6575 59.8336 26.2205C63.2313 22.6697 69.8986 25.0733 74.1297 25.8381C77.3993 26.439 79.8995 26.1112 83.169 26.1112C83.8742 26.1112 84.3871 26.2751 84.7076 26.5482C84.8999 25.2918 85.2204 23.9807 85.2204 22.8336Z" fill="#D9F1FF"/>
                            <path d="M88.2332 33.8134C87.0793 33.9773 86.0536 33.431 85.4766 32.6662C85.1561 32.2838 84.9637 31.8468 84.8355 31.4098C84.4509 33.7042 84.1303 36.1624 85.4766 38.0197C86.0536 38.8392 87.0793 39.3854 88.2332 39.1669C89.3872 39.003 90.1565 38.129 90.477 37.255C90.9258 35.7254 90.5411 33.9773 90.2847 32.3385C89.9001 33.0486 89.1949 33.6495 88.2332 33.8134Z" fill="#D9F1FF"/>
                            <path d="M231.067 40.7518C229.849 42.8822 225.938 42.773 224.848 38.5667C224.848 38.7305 224.784 38.8398 224.784 39.0037C223.053 49.5468 232.221 49.0005 231.387 44.084C231.195 43.1554 231.131 42.0082 231.067 40.7518Z" fill="#D9F1FF"/>
                            <path d="M272.865 32.5027C272.159 34.0869 269.98 35.9442 268.634 34.5785C268.313 34.2507 268.185 33.8684 268.185 33.4313C268.057 29.5528 266.967 25.6742 265.685 21.9595C265.3 20.867 264.467 20.2661 263.184 20.8123C261.774 21.4679 260.941 22.7243 259.658 23.4891C256.068 25.6742 251.517 20.5938 247.157 19.8837C242.862 19.1189 238.695 25.2918 234.336 25.0187H234.272C232.541 24.9094 231.066 26.0566 231.002 27.5315C230.938 29.7713 230.874 32.3934 230.938 34.7424C230.938 34.0869 231.002 33.486 231.002 32.8851C231.066 31.4101 232.541 30.2629 234.272 30.3722H234.336C238.631 30.6453 242.862 24.4724 247.157 25.2372C251.517 26.002 256.068 31.0823 259.658 28.8426C260.941 28.0778 261.774 26.7668 263.184 26.1658C264.467 25.5649 265.3 26.2205 265.685 27.313C266.967 31.0277 267.992 34.9063 268.185 38.7848C268.185 39.1672 268.313 39.6043 268.634 39.932C269.98 41.2977 272.159 39.495 272.865 37.8562C274.467 34.0322 275.301 29.0065 274.852 24.2539C274.596 27.2584 273.89 30.1537 272.865 32.5027Z" fill="#D9F1FF"/>
                            <path d="M225.489 24.9648C225.425 23.5444 224.464 22.288 222.989 21.7417C219.72 20.4853 217.155 20.7038 213.565 20.5945C212.86 20.5945 212.091 20.5945 211.514 20.9769C210.873 21.414 210.809 22.2334 210.809 22.9435C210.809 26.1666 210.937 28.297 210.36 31.5201C210.232 32.3941 209.847 33.3774 208.821 33.7598C207.988 34.033 207.026 33.7598 206.449 33.2135C205.936 32.7219 205.616 32.121 205.424 31.4655C205.359 31.7932 205.231 32.121 205.231 32.3395C204.975 33.7052 204.975 35.1801 205.359 36.5458C205.552 37.256 205.872 38.0208 206.449 38.5671C207.026 39.1133 208.052 39.3865 208.821 39.1133C209.783 38.7856 210.168 37.8023 210.36 36.8736C210.937 33.6506 210.809 31.5747 210.809 28.297C210.809 27.5869 210.873 26.8221 211.514 26.3305C212.027 25.9481 212.86 25.8934 213.565 25.9481C217.155 26.0573 219.72 25.8388 222.989 27.0952C224.143 27.5323 224.977 28.4063 225.361 29.4442C225.489 27.6961 225.489 26.2212 225.489 24.9648Z" fill="#D9F1FF"/>
                            <path d="M205.231 26.9857C205.423 25.8931 206.321 23.5441 205.167 22.6154C204.013 21.7414 202.218 22.7247 201 22.8886C196.448 23.3256 192.41 20.922 188.307 19.5563C183.947 18.136 179.075 17.7536 174.395 18.2998C169.459 18.9008 165.035 21.0312 159.971 20.8127C154.522 20.5942 149.393 18.4637 144.008 17.9721C139.52 17.5351 138.43 21.0312 136.379 23.7626C133.815 27.2588 128.43 29.1161 125.545 24.7459C125.288 24.3635 125.096 23.9811 124.904 23.5987C124.775 26.1116 124.711 29.3893 124.775 32.2845C124.775 31.0827 124.84 29.9355 124.904 28.9522C125.096 29.3346 125.352 29.717 125.545 30.0994C128.43 34.4696 133.815 32.6123 136.379 29.1161C138.43 26.3847 139.52 22.8886 144.008 23.3256C149.457 23.8172 154.522 25.9477 159.971 26.1662C165.035 26.3847 169.459 24.2543 174.395 23.6534C179.011 23.0525 183.883 23.4895 188.307 24.9098C192.41 26.2209 196.384 28.6791 201 28.2421C202.218 28.1328 204.013 27.1495 205.103 27.9689C205.103 27.6412 205.167 27.3134 205.231 26.9857Z" fill="#D9F1FF"/>
                            <path d="M90.4777 35.3446C90.2213 36.2733 89.3879 37.0927 88.234 37.2566C87.08 37.4205 86.0543 36.8742 85.4773 36.1094C84.9003 35.3446 84.6439 34.416 84.5157 33.4873C84.3875 35.1261 84.5157 36.7103 85.4773 37.9668C86.0543 38.7862 87.08 39.3325 88.234 39.114C89.3879 38.9501 90.1572 38.076 90.4777 37.202C90.7342 36.3279 90.7342 35.4539 90.6701 34.5252C90.6059 34.7984 90.5418 35.0715 90.4777 35.3446Z" fill="#B4DCFF"/>
                            <path d="M119.07 27.5327C119.07 26.5494 119.07 25.6207 119.006 24.8559C118.878 22.6708 116.377 21.1959 113.941 21.8514C109.39 23.0532 104.517 25.8939 100.222 24.8013C98.0424 24.255 95.991 23.3264 93.7472 23.0532C89.7725 22.5069 89.9648 26.0031 90.0289 28.4067C90.1571 26.4401 90.7341 24.5828 93.7472 24.9652C95.991 25.2383 98.0424 26.167 100.222 26.7133C104.517 27.8058 109.39 24.9652 113.941 23.7634C116.377 23.1078 118.878 24.5828 119.006 26.7679C119.07 26.9864 119.07 27.2596 119.07 27.5327Z" fill="#B4DCFF"/>
                            <path d="M85.1564 27.3136C85.2205 26.9859 85.2205 26.6035 85.2205 26.2757C85.2846 25.0193 84.7077 24.1998 83.1691 24.1998C79.9637 24.1998 77.3993 24.5276 74.1298 23.9267C69.8987 23.1619 63.1673 20.7583 59.8337 24.3091C58.5515 25.6202 58.4233 27.2044 58.6156 28.8432C58.7439 27.9145 59.0644 27.0405 59.8337 26.2211C63.2314 22.6703 69.8987 25.0739 74.1298 25.8387C77.3993 26.4396 79.8996 26.1118 83.1691 26.1118C84.3871 26.1118 84.9641 26.5488 85.1564 27.3136Z" fill="#B4DCFF"/>
                            <path d="M57.9106 36.3274C57.3336 36.9283 56.4361 37.256 55.5386 37.1468C53.2307 36.8736 52.5896 34.5246 52.4614 32.6673C52.4614 32.8858 52.4614 33.1043 52.4614 33.3228C52.3973 35.1802 52.6537 38.6763 55.5386 39.0587C56.4361 39.168 57.3978 38.8402 57.9106 38.2393C59.1287 36.9283 59.1928 35.3987 59.0646 33.8145C58.9363 34.6885 58.6158 35.5626 57.9106 36.3274Z" fill="#B4DCFF"/>
                            <path d="M50.8586 25.2384C45.6018 20.6496 40.7295 34.9621 36.7548 31.8483C33.7418 29.4993 32.6519 25.4569 28.6131 24.1458C25.6 23.1625 22.4587 24.3097 19.4456 24.9106C15.9838 25.5661 13.8041 21.7422 10.5346 21.6876C8.03438 21.6329 7.4574 26.167 7.07276 27.9151C6.75221 29.1169 6.17524 30.5372 4.89308 31.2474C1.68767 33.0501 0.469613 27.1503 0.213181 25.6208C0.149073 25.2384 0.0849644 24.7467 0.0849644 24.2551C0.0208562 25.5661 0.0849644 26.7133 0.213181 27.5327C0.469613 29.0623 1.68767 34.9621 4.89308 33.1594C6.17524 32.4492 6.81632 31.0835 7.07276 29.8271C7.52151 28.079 8.03438 23.5995 10.5346 23.5995C13.8041 23.6542 15.9838 27.4781 19.4456 26.8226C22.3946 26.2763 25.5359 25.1291 28.6131 26.0578C32.716 27.3688 33.8059 31.4113 36.7548 33.7603C40.7295 36.8741 45.6018 22.6162 50.8586 27.1503C52.0126 28.1336 52.3331 29.3901 52.4613 30.7011C52.5254 28.7345 52.5254 26.7133 50.8586 25.2384Z" fill="#B4DCFF"/>
                            <path d="M205.616 28.7343C205.808 27.751 205.872 26.6584 205.103 26.1121C203.949 25.2381 202.154 26.2214 200.936 26.3853C196.384 26.8223 192.345 24.4187 188.243 23.053C183.883 21.6327 179.011 21.2503 174.331 21.7966C169.395 22.3975 164.971 24.5279 159.907 24.3094C154.458 24.0909 149.329 21.9604 143.944 21.4688C139.456 21.0318 138.366 24.5279 136.315 27.2593C133.751 30.7555 128.365 32.6128 125.481 28.2426C125.224 27.8602 125.032 27.4778 124.84 27.0954C124.775 29.1713 124.647 31.7388 124.711 34.2517C124.711 32.3943 124.775 30.537 124.84 29.0074C125.032 29.3898 125.288 29.7722 125.481 30.1546C128.365 34.5248 133.751 32.6675 136.315 29.1713C138.366 26.4399 139.456 22.9437 143.944 23.3808C149.393 23.8724 154.458 26.0029 159.907 26.2214C164.971 26.4399 169.395 24.3094 174.331 23.7085C178.947 23.1076 183.819 23.5446 188.243 24.965C192.345 26.276 196.32 28.7343 200.936 28.2972C202.154 28.188 203.949 27.2047 205.103 28.0241C205.359 28.188 205.552 28.4065 205.616 28.7343Z" fill="#B4DCFF"/>
                            <path d="M231.323 43.5929C230.49 46.5428 225.105 46.5428 224.592 40.5338C223.951 49.3834 232.157 48.6733 231.387 44.0299C231.323 43.9207 231.323 43.7568 231.323 43.5929Z" fill="#B4DCFF"/>
                            <path d="M272.865 35.9448C272.16 37.529 269.98 39.3863 268.634 38.0207C268.313 37.6929 268.185 37.3105 268.185 36.8735C268.057 32.9949 266.967 29.1163 265.685 25.4017C265.3 24.3091 264.467 23.7082 263.185 24.2545C261.774 24.91 260.941 26.1664 259.659 26.9312C256.069 29.1163 251.517 24.036 247.158 23.3258C242.863 22.561 238.696 28.7339 234.336 28.4608H234.272C232.541 28.3516 231.067 29.4987 231.003 30.9737C230.938 32.7218 230.874 34.6884 230.938 36.6003C230.938 35.2893 231.003 34.0328 231.003 32.8857C231.067 31.4107 232.541 30.2635 234.272 30.3728H234.336C238.631 30.6459 242.863 24.473 247.158 25.2378C251.517 26.0026 256.069 31.0829 259.659 28.8432C260.941 28.0784 261.774 26.7673 263.185 26.1664C264.467 25.5655 265.3 26.2211 265.685 27.3136C266.967 31.0283 267.993 34.9069 268.185 38.7854C268.185 39.1678 268.313 39.6049 268.634 39.9326C269.98 41.2983 272.16 39.4956 272.865 37.8568C274.276 34.5245 275.109 30.2089 274.981 25.9479C274.853 29.5534 274.083 33.1042 272.865 35.9448Z" fill="#B4DCFF"/>
                            <path d="M225.489 28.4615C225.425 27.0411 224.464 25.7847 222.989 25.2384C219.72 23.982 217.155 24.2005 213.565 24.0912C212.86 24.0912 212.091 24.0912 211.514 24.4736C210.873 24.9107 210.809 25.7301 210.809 26.4402C210.809 26.9865 210.809 27.4782 210.809 27.9152C210.873 27.3143 211.001 26.768 211.514 26.3856C212.027 26.0032 212.86 25.9486 213.565 26.0032C217.155 26.1125 219.72 25.894 222.989 27.1504C224.464 27.6967 225.425 28.9531 225.489 30.3188C225.489 29.6086 225.489 29.0077 225.489 28.4615Z" fill="#B4DCFF"/>
                            <path d="M210.359 34.9624C210.231 35.8364 209.846 36.8197 208.821 37.2021C207.987 37.4753 207.026 37.2021 206.449 36.6558C205.872 36.1096 205.551 35.3994 205.359 34.6346C205.231 34.143 205.167 33.6513 205.102 33.1597C204.974 34.3069 205.038 35.3994 205.359 36.5466C205.551 37.2568 205.872 38.0215 206.449 38.5678C207.026 39.1141 208.051 39.3872 208.821 39.1141C209.782 38.7863 210.167 37.803 210.359 36.8744C210.808 34.3069 210.808 32.4495 210.808 30.1552C210.744 31.6301 210.68 33.1597 210.359 34.9624Z" fill="#B4DCFF"/>
                            <path d="M125.096 41.3524C124.263 44.4116 118.685 44.4116 118.172 38.2386C117.531 47.3068 125.929 46.5967 125.16 41.7894C125.096 41.6256 125.096 41.4617 125.096 41.3524Z" fill="#B4DCFF"/>
                            <path d="M257.608 11.0897C257.544 12.1276 254.531 12.8378 250.877 12.7285C247.223 12.6192 244.274 11.6906 244.274 10.7073C244.338 9.66935 247.351 8.95919 251.005 9.06845C254.724 9.1777 257.608 10.1064 257.608 11.0897Z" fill="#D9F1FF"/>
                            <path d="M179.653 9.83296C179.589 10.8709 176.575 11.581 172.921 11.4718C169.267 11.3625 166.318 10.4339 166.318 9.45057C166.382 8.41264 169.395 7.70248 173.049 7.81173C176.768 7.92099 179.717 8.84966 179.653 9.83296Z" fill="#D9F1FF"/>
                            <path d="M74.1937 10.4336C74.1296 11.253 71.7576 11.8539 68.8086 11.7447C65.8597 11.6354 63.5518 10.9252 63.5518 10.1058C63.6159 9.28641 65.9879 8.68551 68.9368 8.79476C71.8858 8.90402 74.1937 9.61418 74.1937 10.4336Z" fill="#D9F1FF"/>
                            <path d="M62.2709 10.2146C62.3991 10.8155 60.7964 11.5803 58.745 11.908C56.6294 12.2904 54.8344 12.1265 54.7062 11.5256C54.5779 10.9247 56.1807 10.1599 58.2321 9.83217C60.2836 9.50441 62.0786 9.66829 62.2709 10.2146Z" fill="#D9F1FF"/>
                            <path d="M13.2914 9.61441C13.4197 10.2153 11.8169 10.9801 9.76549 11.3079C7.64992 11.6903 5.85489 11.5264 5.72667 10.9255C5.59846 10.3246 7.20116 9.55978 9.25262 9.23201C11.3682 8.84962 13.1632 9.0135 13.2914 9.61441Z" fill="#D9F1FF"/>
                            <path d="M164.523 9.77904C164.651 10.5438 162.6 11.4179 159.907 11.8003C157.215 12.1827 154.907 11.8549 154.778 11.1447C154.65 10.3799 156.702 9.5059 159.394 9.12351C162.087 8.74111 164.395 9.01425 164.523 9.77904Z" fill="#D9F1FF"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M29.8956 20.4308C29.8956 21.1955 29.1263 21.8511 28.2288 21.8511C27.3313 21.8511 26.562 21.1955 26.562 20.4308C26.562 19.666 27.3313 19.0104 28.2288 19.0104C29.1263 19.0104 29.8956 19.6113 29.8956 20.4308Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M183.884 1.42032C183.884 2.18511 183.114 2.84064 182.217 2.84064C181.319 2.84064 180.55 2.18511 180.55 1.42032C180.55 0.655532 181.319 0 182.217 0C183.178 0 183.884 0.655532 183.884 1.42032Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M270.943 27.0404C270.943 27.8052 270.173 28.4608 269.276 28.4608C268.378 28.4608 267.609 27.8052 267.609 27.0404C267.609 26.2756 268.378 25.6201 269.276 25.6201C270.173 25.6201 270.943 26.2756 270.943 27.0404Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M223.31 29.1717C223.31 29.9365 222.54 30.592 221.643 30.592C220.745 30.592 219.976 29.9365 219.976 29.1717C219.976 28.4069 220.745 27.7514 221.643 27.7514C222.54 27.806 223.31 28.4069 223.31 29.1717Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M149.008 24.1996C149.008 24.9643 148.239 25.6199 147.342 25.6199C146.444 25.6199 145.675 24.9643 145.675 24.1996C145.675 23.4348 146.444 22.7792 147.342 22.7792C148.303 22.7792 149.008 23.4348 149.008 24.1996Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M185.807 42.7194C185.807 43.1018 185.422 43.4295 184.974 43.4295C184.525 43.4295 184.14 43.1018 184.14 42.7194C184.14 42.337 184.525 42.0092 184.974 42.0092C185.422 42.0092 185.807 42.337 185.807 42.7194Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M106.569 29.882C106.569 30.2644 106.184 30.5922 105.735 30.5922C105.287 30.5922 104.902 30.2644 104.902 29.882C104.902 29.4996 105.287 29.1719 105.735 29.1719C106.248 29.1719 106.569 29.4996 106.569 29.882Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M129.584 9.50453C129.584 9.88693 129.199 10.2147 128.751 10.2147C128.302 10.2147 127.917 9.88693 127.917 9.50453C127.917 9.12214 128.302 8.79437 128.751 8.79437C129.199 8.79437 129.584 9.12214 129.584 9.50453Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M91.824 14.2584C91.824 14.6408 91.4394 14.9685 90.9906 14.9685C90.5419 14.9685 90.1572 14.6408 90.1572 14.2584C90.1572 13.876 90.5419 13.5482 90.9906 13.5482C91.4394 13.5482 91.824 13.876 91.824 14.2584Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M63.6165 10.2153C63.6165 10.5977 63.2319 10.9255 62.7831 10.9255C62.3344 10.9255 61.9497 10.5977 61.9497 10.2153C61.9497 9.83295 62.3344 9.50519 62.7831 9.50519C63.2319 9.50519 63.6165 9.83295 63.6165 10.2153Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M71.6944 30.5916C71.6944 30.974 71.3098 31.3017 70.861 31.3017C70.4122 31.3017 70.0276 30.974 70.0276 30.5916C70.0276 30.2092 70.4122 29.8814 70.861 29.8814C71.3098 29.8814 71.6944 30.2092 71.6944 30.5916Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M194.205 18.3001C194.205 18.6825 193.821 19.0103 193.372 19.0103C192.923 19.0103 192.538 18.6825 192.538 18.3001C192.538 17.9177 192.923 17.59 193.372 17.59C193.821 17.59 194.205 17.9177 194.205 18.3001Z" fill="white"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M242.927 10.2153C242.927 10.5977 242.542 10.9255 242.093 10.9255C241.645 10.9255 241.26 10.5977 241.26 10.2153C241.26 9.83295 241.645 9.50519 242.093 9.50519C242.542 9.50519 242.927 9.83295 242.927 10.2153Z" fill="white"/>
                        </svg>
                    </>}
                    <div class="h-full w-full xll:w-auto flex-1 flex flex-col gap-4 overflow-hidden relative bet-info-bg p-5">
                        <div class="w-full grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
                            <div class="w-full flex items-center relative">
                                <div class="w-full h-28 rounded-4 bg-dark-22" />
                                <div
                                    class="flex flex-col w-full h-full justify-center gap-2 pl-8 absolute backdrop-blur-sm rounded-4"
                                    style={{
                                        background: "linear-gradient(218.47deg, rgba(19, 22, 32, 0.5) -4.89%, rgba(19, 22, 32, 0) 109.48%)",
                                        border: "2px solid rgba(102, 110, 151, 0.2)"
                                    }}
                                >
                                    <div class="flex gap-4 items-center">
                                        <Coin />
                                        <p class="text-22 text-white font-bold leading-none">{Number(game?.pot || 0).toLocaleString()}</p>
                                    </div>
                                    <p class="text-18 text-gray-8c font-normal">{i18n.t('jackpot.total amount')}</p>
                                </div>
                            </div>
                            <div class="w-full flex items-center relative">
                                <div class="w-full h-28 rounded-4 bg-dark-22" />
                                <div
                                    class="flex flex-col w-full h-full justify-center gap-2 pl-8 absolute backdrop-blur-sm rounded-4"
                                    style={{
                                        background: "linear-gradient(218.47deg, rgba(19, 22, 32, 0.5) -4.89%, rgba(19, 22, 32, 0) 109.48%)",
                                        border: "2px solid rgba(102, 110, 151, 0.2)"
                                    }}
                                >
                                    <div class="flex gap-4 items-center">
                                    <svg width="30" height="30" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M15.7603 7.1665C15.1584 7.1665 14.5811 7.40562 14.1555 7.83124C13.7299 8.25686 13.4907 8.83413 13.4907 9.43605C13.4907 10.038 13.7299 10.6152 14.1555 11.0409C14.5811 11.4665 15.1584 11.7056 15.7603 11.7056C16.3622 11.7056 16.9395 11.4665 17.3651 11.0409C17.7907 10.6152 18.0298 10.038 18.0298 9.43605C18.0298 8.83413 17.7907 8.25686 17.3651 7.83124C16.9395 7.40562 16.3622 7.1665 15.7603 7.1665ZM14.6255 12.8404C12.7395 12.8404 11.2212 14.3587 11.2212 16.2447V17.3795C11.2212 18.0081 11.7273 18.5142 12.356 18.5142H19.1646C19.7933 18.5142 20.2994 18.0081 20.2994 17.3795V16.2447C20.2994 14.3587 18.7811 12.8404 16.8951 12.8404H14.6255Z" fill="white"/>
                                        <path d="M8.53909 5C7.93717 5 7.35991 5.23911 6.93428 5.66474C6.50866 6.09036 6.26955 6.66763 6.26955 7.26955C6.26955 7.87147 6.50866 8.44874 6.93428 8.87436C7.35991 9.29998 7.93717 9.53909 8.53909 9.53909C9.14102 9.53909 9.71829 9.29998 10.1439 8.87436C10.5695 8.44874 10.8086 7.87147 10.8086 7.26955C10.8086 6.66763 10.5695 6.09036 10.1439 5.66474C9.71829 5.23911 9.14102 5 8.53909 5ZM7.40432 10.6739C5.51833 10.6739 4 12.1922 4 14.0782V15.213C4 15.8416 4.50611 16.3477 5.13477 16.3477H9.67387C9.67387 14.4583 10.8722 12.9003 12.5301 12.2342C12.2232 11.7553 11.8007 11.3613 11.3016 11.0886C10.8024 10.816 10.2427 10.6733 9.67387 10.6739H7.40432Z" fill="white"/>
                                    </svg>
                                        <p class="text-22 text-white font-bold leading-none">{game?.players?.length}</p>
                                    </div>
                                    <p class="text-18 text-gray-8c font-normal">{i18n.t('jackpot.players total')}</p>
                                </div>
                            </div>
                            <div class="w-full flex items-center relative">
                                <div class="w-full h-28 rounded-4 bg-dark-22" />
                                <div
                                    class="flex flex-col w-full h-full justify-center gap-2 pl-8 absolute backdrop-blur-sm rounded-4"
                                    style={{
                                        background: "linear-gradient(218.47deg, rgba(19, 22, 32, 0.5) -4.89%, rgba(19, 22, 32, 0) 109.48%)",
                                        border: "2px solid rgba(102, 110, 151, 0.2)"
                                    }}
                                >
                                    <div class="flex gap-4 items-center">
                                        <img class="w-8 h-6" src={Brilliants} alt="brilliants" />
                                        <p class="text-22 text-white font-bold leading-none">{game?.items || 0}<span class="text-gray-8c">/120</span></p>
                                    </div>
                                    <p class="text-18 text-gray-8c font-normal">{i18n.t('jackpot.items total')}</p>
                                </div>
                            </div>
                        </div>
                        <div class="relative w-full flex-1">
                            { SNOWMODE && <>
                                <svg class="absolute left-2 sm:left-8 -top-4 z-30" width="202" height="45" viewBox="0 0 202 45" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M0.0818192 11.9179C0.0818192 11.9179 1.10876 -1.49822 19.4011 3.29712C29.0286 5.82949 38.592 8.36186 48.733 6.69157C59.195 4.9674 68.8867 0.926392 79.7337 0.926392C88.0134 0.926392 98.0261 2.38116 103.097 8.5235C107.589 13.9654 105.279 21.1315 103.61 27.0044C103.417 27.7587 101.941 33.47 99.9516 31.7997C95.9722 28.4592 98.9246 21.1315 95.2662 18.0603C92.3137 15.5818 91.2226 17.5754 90.2598 20.0539C88.912 23.3944 85.5102 25.1725 83.9057 20.431C82.622 16.6055 79.477 14.6658 74.7274 14.4503C66.8328 14.127 68.1165 19.7306 66.9612 24.3104C66.4477 26.3039 64.7789 29.3751 61.8907 29.2674C57.2053 29.1057 60.607 22.0474 59.5801 19.8922C58.2964 17.2521 54.4454 18.8146 52.1348 19.4073C48.4763 20.3233 44.5611 20.4849 40.8384 19.8922C38.0785 19.4612 33.714 17.306 31.2751 19.515C30.2481 20.431 29.863 21.778 29.6705 23.0173C29.3496 25.1725 29.2854 27.3277 29.2212 29.4829C29.0928 33.5239 22.9954 33.8472 22.4177 29.7523C21.7117 25.1725 23.2521 14.8814 14.0739 16.0128C10.5438 16.4439 7.52712 19.7306 3.86865 18.8685C0.338554 18.0064 -0.110732 14.3964 0.0818192 11.9179Z" fill="white"/>
                                    <path d="M59.5154 14.2332C58.2317 11.5931 54.3807 13.1556 52.0701 13.7483C48.4116 14.6643 44.4964 14.8259 40.7738 14.2332C38.0139 13.8022 33.6494 11.647 31.2104 13.8561C30.1835 14.772 29.7984 16.1191 29.6058 17.3583C29.2849 19.5135 29.2207 21.6687 29.1565 23.8239C29.0282 27.8649 22.9307 28.1882 22.3531 24.0933C21.6471 19.5135 23.1875 9.22239 14.0092 10.3539C10.4791 10.7849 7.46247 14.0716 3.804 13.2095C1.94267 12.7785 0.979918 11.5392 0.530633 10.0845C0.209714 11.1621 0.145531 11.9164 0.145531 11.9164C-0.0470202 14.3949 0.402265 18.0049 3.804 18.8131C7.46247 19.6751 10.5433 16.3885 14.0092 15.9574C23.1875 14.8259 21.6471 25.117 22.3531 29.6969C22.9949 33.7379 29.0282 33.4685 29.1565 29.4275C29.2207 27.2184 29.3491 25.117 29.6058 22.9618C29.7984 21.6687 30.1835 20.3756 31.2104 19.4596C33.6494 17.2505 38.0139 19.4057 40.7738 19.8368C44.4964 20.4295 48.4116 20.2678 52.0701 19.3519C54.2523 18.8131 57.8466 17.3583 59.3229 19.5135C59.4512 17.5199 60.0289 15.3108 59.5154 14.2332Z" fill="#D9F1FF"/>
                                    <path d="M103.61 21.3996C103.417 22.1539 101.941 27.8652 99.9515 26.1949C95.9721 22.8544 98.9246 15.5267 95.2661 12.4555C92.3136 9.97701 91.2225 11.9706 90.2598 14.4491C88.9119 17.7896 85.5102 19.5677 83.9056 14.8262C82.6219 11.0007 79.4769 9.06104 74.7273 8.84552C66.8327 8.52224 68.1164 14.1258 66.9611 18.7056C66.4476 20.6992 64.7789 23.7703 61.8906 23.6626C60.7353 23.6087 60.0293 23.1238 59.7083 22.4233C59.3874 25.3329 58.4889 29.1583 61.8906 29.2661C64.843 29.3739 66.4476 26.3027 66.9611 24.3091C68.1806 19.7293 66.8327 14.1258 74.7273 14.4491C79.5411 14.6646 82.6219 16.5504 83.9056 20.4298C85.5102 25.1712 88.9119 23.3393 90.2598 20.0526C91.2867 17.628 92.3136 15.6344 95.2661 18.059C98.9246 21.1302 95.9721 28.4579 99.9515 31.7985C101.941 33.4688 103.417 27.8113 103.61 27.0031C104.765 22.8544 106.241 18.059 105.471 13.6947C105.086 16.3349 104.316 18.975 103.61 21.3996Z" fill="#D9F1FF"/>
                                    <path d="M59.7083 20.4841C59.7725 19.6759 59.7725 18.9216 59.5157 18.4367C58.2321 15.7965 54.381 17.3591 52.0704 17.9517C48.412 18.8677 44.4968 19.0294 40.7741 18.4367C38.0142 18.0056 33.6497 15.8504 31.2107 18.0595C30.1838 18.9755 29.7987 20.3225 29.6062 21.5617C29.2852 23.7169 29.221 25.8721 29.1569 28.0273C29.0285 32.0684 22.9311 32.3916 22.3534 28.2967C21.6474 23.7169 23.1878 13.4258 14.0095 14.5573C10.4794 14.9883 7.39861 18.275 3.74014 17.4129C1.04443 16.7664 0.14586 14.3418 0.0174927 12.1327C-0.110875 14.6112 0.402595 18.0056 3.74014 18.8138C7.39861 19.6759 10.4794 16.3892 13.9453 15.9582C23.1236 14.8267 21.5832 25.1178 22.2892 29.6976C22.9311 33.7386 28.9643 33.4692 29.0927 29.4282C29.1569 27.2191 29.2852 25.1178 29.542 22.9626C29.7345 21.6695 30.1196 20.3764 31.1466 19.4604C33.5855 17.2513 37.95 19.4065 40.7099 19.8376C44.4326 20.4302 48.3478 20.2686 52.0062 19.3526C54.3169 18.7599 58.1679 17.1974 59.4515 19.8376C59.5799 20.0531 59.6441 20.2686 59.7083 20.4841Z" fill="#B4DCFF"/>
                                    <path d="M103.609 25.603C103.417 26.3573 101.94 32.0686 99.9508 30.3983C95.9714 27.0577 98.9238 19.73 95.2654 16.6589C92.3129 14.1804 91.2218 16.1739 90.259 18.6524C88.9112 21.993 85.5094 23.771 83.9048 19.0296C82.6212 15.2041 79.4762 13.2644 74.7266 13.0489C66.832 12.7256 68.1157 18.3291 66.9604 22.909C66.4469 24.9025 64.7781 27.9737 61.8899 27.8659C60.0927 27.8121 59.5151 26.7345 59.3867 25.2797C59.2583 27.3271 59.5792 29.1591 61.8899 29.2668C64.8423 29.3746 66.4469 26.3034 66.9604 24.3098C68.1799 19.73 66.832 14.1265 74.7266 14.4498C79.5404 14.6653 82.6212 16.5511 83.9048 20.4305C85.5094 25.1719 88.9112 23.34 90.259 20.0533C91.286 17.6287 92.3129 15.6351 95.2654 18.0597C98.9238 21.1309 95.9714 28.4586 99.9508 31.7992C101.94 33.4695 103.417 27.8121 103.609 27.0039C104.572 23.4478 105.856 19.4606 105.663 15.6351C105.535 19.0296 104.508 22.4779 103.609 25.603Z" fill="#B4DCFF"/>
                                    <path d="M93.7893 5.02135C93.5968 5.77567 91.0936 5.99119 88.2696 5.45239C85.4455 4.91359 83.3274 3.83598 83.52 3.08166C83.7125 2.32734 86.2157 2.11182 89.0398 2.65062C91.8638 3.18942 93.9819 4.26702 93.7893 5.02135Z" fill="#D9F1FF"/>
                                    <path d="M82.1079 2.97399C82.1079 3.51279 80.5033 4.05159 78.4495 4.05159C76.3956 4.10547 74.7268 3.67443 74.7268 3.13563C74.7268 2.59683 76.3314 2.05802 78.3853 2.05802C80.4392 2.00414 82.1079 2.43518 82.1079 2.97399Z" fill="#D9F1FF"/>
                                    <path d="M15.3569 3.99681C15.3569 4.53562 13.7523 5.07442 11.6985 5.07442C9.64458 5.07442 7.91162 4.75114 7.91162 4.15845C7.91162 3.61965 9.51621 3.08085 11.5701 3.08085C13.624 3.02697 15.3569 3.45801 15.3569 3.99681Z" fill="#D9F1FF"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M119.719 12.6184C119.719 12.9956 119.334 13.3189 118.885 13.3189C118.436 13.3189 118.051 12.9956 118.051 12.6184C118.051 12.2413 118.436 11.918 118.885 11.918C119.334 11.918 119.719 12.2413 119.719 12.6184Z" fill="white"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M21.1336 44.2994C21.1336 44.6766 20.7485 44.9999 20.2992 44.9999C19.8499 44.9999 19.4648 44.6766 19.4648 44.2994C19.4648 43.9223 19.8499 43.599 20.2992 43.599C20.7485 43.599 21.1336 43.9223 21.1336 44.2994Z" fill="white"/>
                                    <path d="M201.49 11.918C201.49 11.918 200.463 -1.49816 182.171 3.29718C172.543 5.82954 162.98 8.36191 152.839 6.69163C142.377 4.96746 132.685 0.926448 121.838 0.926448C113.559 0.926448 60.3075 -0.608501 79.8938 3.2971C101.62 8.70867 96.2932 21.1315 97.962 27.0044C98.1545 27.7588 99.6308 33.4701 101.62 31.7998C105.6 28.4592 102.647 21.1315 106.306 18.0603C109.258 15.5819 110.349 17.5754 111.312 20.0539C112.66 23.3945 116.062 25.1725 117.666 20.4311C118.95 16.6056 122.095 14.6659 126.845 14.4504C134.739 14.1271 133.456 19.7306 134.611 24.3104C135.124 26.304 136.793 29.3752 139.681 29.2674C144.367 29.1058 140.965 22.0475 141.992 19.8923C143.276 17.2521 147.127 18.8147 149.437 19.4073C153.096 20.3233 157.011 20.4849 160.734 19.8923C163.493 19.4612 167.858 17.306 170.297 19.5151C171.324 20.4311 171.709 21.7781 171.902 23.0173C172.222 25.1725 172.287 27.3277 172.351 29.4829C172.479 33.5239 178.577 33.8472 179.154 29.7523C179.86 25.1725 178.32 14.8814 187.498 16.0129C191.028 16.4439 194.045 19.7306 197.703 18.8685C201.233 18.0065 201.683 14.3965 201.49 11.918Z" fill="white"/>
                                    <path d="M83.4136 2.97411C83.4136 3.51291 81.809 4.05171 79.7551 4.05171C77.7012 4.10559 76.0325 3.67455 76.0325 3.13575C76.0325 2.59695 77.6371 2.05815 79.6909 2.05815C81.7448 2.00427 83.4136 2.43531 83.4136 2.97411Z" fill="#D9F1FF"/>
                                    <path d="M142.057 14.2332C143.341 11.5931 147.192 13.1556 149.502 13.7483C153.161 14.6643 157.076 14.8259 160.798 14.2332C163.558 13.8022 167.923 11.647 170.362 13.8561C171.389 14.772 171.774 16.1191 171.966 17.3583C172.287 19.5135 172.352 21.6687 172.416 23.8239C172.544 27.8649 178.642 28.1882 179.219 24.0933C179.925 19.5135 178.385 9.22239 187.563 10.3539C191.093 10.7849 194.11 14.0716 197.768 13.2095C199.63 12.7785 200.592 11.5392 201.042 10.0845C201.363 11.1621 201.427 11.9164 201.427 11.9164C201.619 14.3949 201.17 18.0049 197.768 18.8131C194.11 19.6751 191.029 16.3885 187.563 15.9574C178.385 14.8259 179.925 25.117 179.219 29.6969C178.577 33.7379 172.544 33.4685 172.416 29.4275C172.352 27.2184 172.223 25.117 171.966 22.9618C171.774 21.6687 171.389 20.3756 170.362 19.4596C167.923 17.2505 163.558 19.4057 160.798 19.8368C157.076 20.4295 153.161 20.2678 149.502 19.3519C147.32 18.8131 143.726 17.3583 142.249 19.5135C142.121 17.5199 141.543 15.3108 142.057 14.2332Z" fill="#D9F1FF"/>
                                    <path d="M97.9623 21.3996C98.1549 22.1539 99.6311 27.8652 101.621 26.1949C105.6 22.8544 102.648 15.5267 106.306 12.4555C109.259 9.97701 110.35 11.9706 111.313 14.4491C112.66 17.7896 116.062 19.5677 117.667 14.8262C118.95 11.0007 122.095 9.06104 126.845 8.84552C134.74 8.52224 133.456 14.1258 134.611 18.7056C135.125 20.6992 136.793 23.7703 139.682 23.6626C140.837 23.6087 141.543 23.1238 141.864 22.4233C142.185 25.3329 143.083 29.1583 139.682 29.2661C136.729 29.3739 135.125 26.3027 134.611 24.3091C133.392 19.7293 134.74 14.1258 126.845 14.4491C122.031 14.6646 118.95 16.5504 117.667 20.4298C116.062 25.1712 112.66 23.3393 111.313 20.0526C110.286 17.628 109.259 15.6344 106.306 18.059C102.648 21.1302 105.6 28.4579 101.621 31.7985C99.6311 33.4688 98.1549 27.8113 97.9623 27.0031C96.807 22.8544 95.3308 18.059 96.101 13.6947C96.4861 16.3349 97.2563 18.975 97.9623 21.3996Z" fill="#D9F1FF"/>
                                    <path d="M141.864 20.4842C141.8 19.676 141.8 18.9217 142.056 18.4368C143.34 15.7967 147.191 17.3592 149.502 17.9519C153.16 18.8678 157.075 19.0295 160.798 18.4368C163.558 18.0058 167.922 15.8505 170.361 18.0596C171.388 18.9756 171.773 20.3226 171.966 21.5618C172.287 23.717 172.351 25.8723 172.415 28.0275C172.544 32.0685 178.641 32.3918 179.219 28.2969C179.925 23.717 178.384 13.4259 187.562 14.5574C191.093 14.9885 194.173 18.2752 197.832 17.4131C200.528 16.7665 201.426 14.3419 201.555 12.1328C201.683 14.6113 201.169 18.0057 197.832 18.814C194.173 19.676 191.093 16.3893 187.627 15.9583C178.448 14.8268 179.989 25.1179 179.283 29.6977C178.641 33.7388 172.608 33.4694 172.479 29.4283C172.415 27.2193 172.287 25.1179 172.03 22.9627C171.838 21.6696 171.452 20.3765 170.425 19.4605C167.986 17.2514 163.622 19.4066 160.862 19.8377C157.139 20.4304 153.224 20.2687 149.566 19.3528C147.255 18.7601 143.404 17.1975 142.12 19.8377C141.992 20.0532 141.928 20.2687 141.864 20.4842Z" fill="#B4DCFF"/>
                                    <path d="M97.9628 25.6031C98.1553 26.3574 99.6316 32.0687 101.621 30.3984C105.601 27.0579 102.648 19.7302 106.307 16.659C109.259 14.1805 110.35 16.1741 111.313 18.6526C112.661 21.9931 116.063 23.7712 117.667 19.0297C118.951 15.2042 122.096 13.2645 126.845 13.049C134.74 12.7257 133.456 18.3293 134.612 22.9091C135.125 24.9027 136.794 27.9738 139.682 27.8661C141.479 27.8122 142.057 26.7346 142.185 25.2798C142.314 27.3273 141.993 29.1592 139.682 29.2669C136.73 29.3747 135.125 26.3035 134.612 24.31C133.392 19.7302 134.74 14.1266 126.845 14.4499C122.032 14.6654 118.951 16.5512 117.667 20.4306C116.063 25.1721 112.661 23.3401 111.313 20.0534C110.579 18.5739 110.267 16.2279 107.315 18.6526C103.656 21.7237 105.601 28.4587 101.621 31.7993C99.6316 33.4696 98.1553 27.8122 97.9628 27.004C97 23.4479 95.7164 19.4608 95.9089 15.6353C96.0373 19.0297 97.0642 22.478 97.9628 25.6031Z" fill="#B4DCFF"/>
                                    <path d="M101.333 6.29095C101.379 7.06143 103.808 7.61088 106.699 7.45892C109.589 7.30697 111.886 6.5282 111.84 5.75772C111.793 4.98725 109.364 4.4378 106.473 4.58975C103.583 4.74171 101.287 5.52048 101.333 6.29095Z" fill="#D9F1FF"/>
                                    <path d="M119.464 2.97411C119.464 3.51291 121.069 4.05171 123.123 4.05171C125.176 4.10559 126.845 3.67455 126.845 3.13575C126.845 2.59695 125.241 2.05815 123.187 2.05815C121.133 2.00427 119.464 2.43531 119.464 2.97411Z" fill="#D9F1FF"/>
                                    <path d="M186.215 3.99681C186.215 4.53562 187.82 5.07442 189.874 5.07442C191.927 5.07442 193.66 4.75114 193.66 4.15845C193.66 3.61965 192.056 3.08085 190.002 3.08085C187.948 3.02697 186.215 3.45801 186.215 3.99681Z" fill="#D9F1FF"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M155.086 24.7949C155.086 25.5493 155.856 26.1958 156.755 26.1958C157.653 26.1958 158.423 25.5493 158.423 24.7949C158.423 24.0406 157.653 23.394 156.755 23.394C155.856 23.394 155.086 23.9867 155.086 24.7949Z" fill="white"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M191.735 30.9379C191.735 31.315 192.12 31.6383 192.569 31.6383C193.018 31.6383 193.404 31.315 193.404 30.9379C193.404 30.5607 193.018 30.2374 192.569 30.2374C192.12 30.2374 191.735 30.5607 191.735 30.9379Z" fill="white"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M180.439 44.2996C180.439 44.6767 180.824 45 181.273 45C181.722 45 182.107 44.6767 182.107 44.2996C182.107 43.9224 181.722 43.5991 181.273 43.5991C180.824 43.5991 180.439 43.9224 180.439 44.2996Z" fill="white"/>
                                </svg>
                                <svg class="absolute right-2 sm:right-20 -top-4 z-30" width="102" height="39" viewBox="0 0 102 39" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M6.62262 11.8227C6.62262 11.8227 7.5499 -2.60795 24.0669 2.55C32.7601 5.27386 41.3954 7.99773 50.5522 6.20114C59.9988 4.28864 68.6919 0 78.5442 0C86.0204 0 95.0613 1.56477 99.6397 8.17159C103.697 14.025 101.61 21.733 100.103 28.05C99.9295 28.8614 98.5965 35.0046 96.7999 33.208C93.2067 29.6148 95.8726 21.733 92.5692 18.4295C89.9033 15.7636 88.9181 17.908 88.0488 20.5739C86.8317 24.167 83.7601 26.0795 82.3113 20.9795C81.1522 16.8648 78.3124 14.7784 74.0238 14.5466C66.8954 14.1989 68.0544 20.2261 67.0113 25.1523C66.5476 27.2966 65.0408 30.6 62.4329 30.4841C58.2022 30.3102 61.2738 22.7182 60.3465 20.4C59.1874 17.5602 55.7101 19.2409 53.6238 19.8784C50.3204 20.8636 46.7851 21.0375 43.4238 20.4C40.9317 19.9364 36.9908 17.6182 34.7885 19.9943C33.8613 20.9795 33.5135 22.4284 33.3397 23.7614C33.0499 26.0795 32.9919 28.3977 32.934 30.7159C32.8181 35.0625 27.3124 35.4102 26.7908 31.0057C26.1533 26.0795 27.5442 15.0102 19.2567 16.2273C16.0692 16.6909 13.3454 20.2261 10.0419 19.2989C6.85444 18.3716 6.44876 14.4886 6.62262 11.8227Z" fill="white"/>
                                    <path d="M60.288 14.316C59.1289 11.4762 55.6517 13.1569 53.5653 13.7944C50.2619 14.7797 46.7267 14.9535 43.3653 14.316C40.8732 13.8524 36.9323 11.5342 34.7301 13.9103C33.8028 14.8956 33.4551 16.3444 33.2812 17.6774C32.9914 19.9956 32.9335 22.3137 32.8755 24.6319C32.7596 28.9785 27.2539 29.3262 26.7323 24.9217C26.0948 19.9956 27.4857 8.92624 19.1982 10.1433C16.0107 10.6069 13.2869 14.1422 9.98347 13.2149C8.30279 12.7512 7.43347 11.4183 6.96983 9.85352C6.68006 11.0126 6.6221 11.824 6.6221 11.824C6.44824 14.4899 6.85392 18.3728 9.92551 19.2422C13.2289 20.1694 16.0107 16.6342 19.1403 16.1706C27.4278 14.9535 26.0369 26.0228 26.6744 30.949C27.2539 35.2956 32.7017 35.0058 32.8176 30.6592C32.8755 28.2831 32.9914 26.0228 33.2232 23.7047C33.3971 22.3137 33.7448 20.9228 34.6721 19.9376C36.8744 17.5615 40.8153 19.8797 43.3073 20.3433C46.6687 20.9808 50.2039 20.8069 53.5073 19.8217C55.4778 19.2422 58.7233 17.6774 60.0562 19.9956C60.2301 17.8512 60.7517 15.4751 60.288 14.316Z" fill="#D9F1FF"/>
                                    <path d="M100.103 22.0243C99.9293 22.8356 98.5963 28.9788 96.7997 27.1822C93.2065 23.589 95.8724 15.7072 92.569 12.4038C89.9031 9.7379 88.9179 11.8822 88.0486 14.5481C86.8315 18.1413 83.7599 20.0538 82.3111 14.9538C81.152 10.839 78.3122 8.75267 74.0236 8.52085C66.8952 8.17312 68.0542 14.2004 67.0111 19.1265C66.5474 21.2709 65.0406 24.5743 62.4327 24.4584C61.3895 24.4004 60.752 23.8788 60.4622 23.1254C60.1724 26.2549 59.3611 30.3697 62.4327 30.4856C65.0986 30.6015 66.5474 27.2981 67.0111 25.1538C68.1122 20.2277 66.8952 14.2004 74.0236 14.5481C78.3702 14.7799 81.152 16.8084 82.3111 20.9811C83.7599 26.0811 86.8315 24.1106 88.0486 20.5754C88.9758 17.9674 89.9031 15.8231 92.569 18.4311C95.8724 21.7345 93.2065 29.6163 96.7997 33.2095C98.5963 35.0061 99.9293 28.9209 100.103 28.0515C101.146 23.589 102.479 18.4311 101.784 13.7368C101.436 16.5765 100.741 19.4163 100.103 22.0243Z" fill="#D9F1FF"/>
                                    <path d="M60.463 21.0378C60.5209 20.1685 60.521 19.3571 60.2891 18.8355C59.13 15.9957 55.6528 17.6764 53.5664 18.3139C50.263 19.2992 46.7278 19.473 43.3664 18.8355C40.8744 18.3719 36.9334 16.0537 34.7312 18.4298C33.8039 19.4151 33.4562 20.8639 33.2823 22.1969C32.9925 24.5151 32.9346 26.8332 32.8766 29.1514C32.7607 33.498 27.255 33.8457 26.7334 29.4412C26.0959 24.5151 27.4869 13.4457 19.1994 14.6628C16.0119 15.1264 13.288 18.6617 9.98458 17.7344C7.49254 17.0389 6.73913 14.4889 6.62322 12.1128C6.50731 14.7787 6.97094 18.4298 9.98458 19.2992C13.288 20.2264 16.0698 16.6912 19.1994 16.2276C27.4869 15.0105 26.0959 26.0798 26.7334 31.006C27.313 35.3526 32.7607 35.0628 32.8766 30.7162C32.9346 28.3401 33.0505 26.0798 33.2823 23.7617C33.4562 22.3707 33.8039 20.9798 34.7312 19.9946C36.9334 17.6185 40.8744 19.9367 43.3664 20.4003C46.7278 21.0378 50.263 20.8639 53.5664 19.8787C55.6528 19.2412 59.13 17.5605 60.2891 20.4003C60.3471 20.5742 60.405 20.806 60.463 21.0378Z" fill="#B4DCFF"/>
                                    <path d="M100.104 26.5434C99.9302 27.3548 98.5973 33.498 96.8007 31.7014C93.2075 28.1082 95.8734 20.2264 92.57 16.923C89.9041 14.2571 88.9189 16.4014 88.0496 19.0673C86.8325 22.6605 83.7609 24.573 82.312 19.473C81.153 15.3582 78.3132 13.2718 74.0246 13.04C66.8961 12.6923 68.0552 18.7196 67.0121 23.6457C66.5484 25.79 65.0416 29.0934 62.4336 28.9775C60.8109 28.9196 60.2893 27.7605 60.1734 26.1957C60.0575 28.398 60.3473 30.3684 62.4336 30.4843C65.0996 30.6002 66.5484 27.2968 67.0121 25.1525C68.1132 20.2264 66.8961 14.1991 74.0246 14.5468C78.3711 14.7787 81.153 16.8071 82.312 20.9798C83.7609 26.0798 86.8325 24.1093 88.0496 20.5741C88.9768 17.9662 89.9041 15.8218 92.57 18.4298C95.8734 21.7332 93.2075 29.615 96.8007 33.2082C98.5973 35.0048 99.9302 28.9196 100.104 28.0502C100.973 24.2252 102.133 19.9366 101.959 15.8218C101.843 19.473 100.915 23.1821 100.104 26.5434Z" fill="#B4DCFF"/>
                                    <path d="M91.2363 4.40501C91.0625 5.21638 88.8022 5.4482 86.2522 4.86865C83.7022 4.28911 81.7897 3.13001 81.9636 2.31865C82.1375 1.50729 84.3977 1.27547 86.9477 1.85501C89.4977 2.43456 91.4102 3.59365 91.2363 4.40501Z" fill="#D9F1FF"/>
                                    <path d="M80.6887 2.20314C80.6887 2.78269 79.2398 3.36223 77.3853 3.36223C75.5307 3.42019 74.0239 2.95655 74.0239 2.37701C74.0239 1.79746 75.4728 1.21791 77.3273 1.21791C79.1819 1.15996 80.6887 1.6236 80.6887 2.20314Z" fill="#D9F1FF"/>
                                    <path d="M20.4161 3.30458C20.4161 3.88413 18.9672 4.46367 17.1127 4.46367C15.2581 4.46367 13.6934 4.11595 13.6934 3.47845C13.6934 2.8989 15.1422 2.31935 16.9968 2.31935C18.8513 2.2614 20.4161 2.72504 20.4161 3.30458Z" fill="#D9F1FF"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M48.5239 25.6733C48.5239 26.4847 47.8284 27.1801 47.0171 27.1801C46.2057 27.1801 45.5103 26.4847 45.5103 25.6733C45.5103 24.862 46.2057 24.1665 47.0171 24.1665C47.8284 24.1665 48.5239 24.804 48.5239 25.6733Z" fill="white"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M84.1081 36.6278C84.1081 37.4392 83.4127 38.1346 82.6013 38.1346C81.7899 38.1346 81.0945 37.4392 81.0945 36.6278C81.0945 35.8164 81.7899 35.121 82.6013 35.121C83.4127 35.121 84.1081 35.8164 84.1081 36.6278Z" fill="white"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M4 15.5C4 16.3077 3.07692 17 2 17C0.923077 17 0 16.3077 0 15.5C0 14.6923 0.923077 14 2 14C3.07692 14 4 14.6923 4 15.5Z" fill="white"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M92.2217 11.6484C92.2217 12.0541 91.8739 12.4018 91.4683 12.4018C91.0626 12.4018 90.7148 12.0541 90.7148 11.6484C90.7148 11.2427 91.0626 10.895 91.4683 10.895C91.8739 10.895 92.2217 11.2427 92.2217 11.6484Z" fill="white"/>
                                </svg>
                            </>}
                            <div class="w-full flex-1 flex flex-col gap-2 relative overflow-hidden">
                            

                                <div class="w-full flex-1 overflow-y-scroll relative">
                                    <For each={[...game?.players || []].sort((a, b) => b.bet - a.bet)} fallback={<div class="w-full fourk:h-120 h-60 bg-dark-20 center"><p class="text-white text-14 font-medium font-Oswald uppercase"> {i18n.t('jackpot.no players yet')} </p></div>}>
                                        {(val, i) => (
                                            <div class={`w-full h-auto min-h-28 md:min-h-20 ${i() % 2 == 0 ? "bg-dark-26 bg-opacity-40" : ""} relative pl-10 py-3 grid grid-cols-1 md:grid-cols-jackpot mb-3 first:mt-10`}>
                                                {/* <svg class="absolute left-0 top-0" width="11" height="10" viewBox="0 0 11 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M0 9.5V0H11L0 9.5Z" fill="#181A27"/>
                                                </svg> */}
                                                <svg class="absolute right-0 bottom-0" width="11" height="10" viewBox="0 0 11 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M11 9.5V0L0 9.5H11Z" fill="#181A27"/>
                                                </svg>
                                                <div class="flex items-center gap-3">
                                                    {/* <div class="w-2.5 h-2.5 rounded-full mr-1" style={{
                                                        background: backgroundColors[i()]
                                                    }}></div> */}
                                                    <img alt="avatar" class="w-8 h-8 rounded-full bg-black" src={val?.avatar} />
                                                    <p class="text-14 text-gray-8c font-normal truncate">{val?.username}</p>
                                                </div>
                                                <div class="flex justify-center flex-col">
                                                    <p class="text-14 text-yellow-ff font-medium font-Oswald">{(val?.bet / game?.pot * 100).toFixed(2)}%</p>
                                                    <p class="text-14 text-gray-8c font-normal">{i18n.t('jackpot.win chance')}</p>
                                                </div>
                                                <div class="flex items-center gap-1">
                                                    <For each={[...val?.items || []].sort((a,b) => {return Number(b.price) - Number(a.price)})?.slice(0, 4)}>
                                                        {(item) => (
                                                            <div class="w-10 relative group small" onMouseEnter={e => console.log(getOffset(e.fromElement))}>
                                                                <ItemInfo positionY="100%" positionX="50%" name={item.name} price={item.price} wrapperCalsses="group-hover:flex hidden" />
                                                                <img alt="item-image"  src={`${item.image}`} class="w-full cursor-pointer relative z-10" />
                                                                <div class="absolute z-0 left-0 top-0 w-full h-full">
                                                                    <ItemSpinnerBg color={
                                                                        item.price > 1000 * 100 ? (
                                                                            "gold"
                                                                        ) : item.price > 1000 * 30 ? (
                                                                            "red"
                                                                        ) : item.price > 1000 * 10 ? (
                                                                            "purple"
                                                                        ) : item.price > 1000 * 2 ? (
                                                                            "blue"
                                                                        ) : "gray"
                                                                    } />
                                                                </div>
                                                            </div>
                                                        )}
                                                    </For>
                                                    <div class={`w-10 h-10 rounded-full bg-dark-22 ${val?.items?.length > 4 ? "center" : "hidden"}`}>
                                                        <p class="text-14 text-gray-8c font-medium font-Oswald">+{val?.items?.length - 4}</p>
                                                    </div>
                                                </div>
                                                <div class="flex justify-center flex-col">
                                                    <div class="flex items-center gap-2">
                                                        <div>
                                                            <Coin /> 
                                                        </div>
                                                        <p class="text-14 text-white font-medium font-Oswald">{Number(val?.bet).toLocaleString()}</p>
                                                    </div>
                                                    <p class="text-14 text-gray-8c font-normal">{i18n.t('jackpot.bet amount')}</p>
                                                </div>
                                            </div>
                                        )}
                                    </For>
                                            
                                </div>
                                <Show
                                    when={game?.players.length > 3}
                                >
                                    <div class="absolute left-0 bottom-0 h-20 w-full bg-gradient-to-b from-transparent to-dark-16" />
                                </Show>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="flex mt-10 gap-3">
                <div 
                    class="relative min-w-24 center bg-dark-27 rounded-2 bg-cover scrolling-btn-wrapper-gray overflow-hidden group hover" 
                    style={{"background-image": `url(${historyMode() == "history" ? GrayButtonBg : ""})`}}
                    onClick={() => setHistoryMode("history")}>
                    <div class="scrolling-btn-image-gray absolute left-0 top-0 hidden group-hover:block" />
                    <p class={`text-14 ${historyMode() == "history" ? "text-dark-1b" : "text-gray-8c"} group-hover:text-dark-1b font-medium font-Oswald uppercase z-10 px-4 py-1.5`}>History</p>
                </div>
                <div 
                    class="relative min-w-24 center bg-dark-27 rounded-2 bg-cover scrolling-btn-wrapper-gray overflow-hidden group hover" 
                    style={{"background-image": `url(${historyMode() == "featured" ? GrayButtonBg : ""})`}}
                    onClick={() => setHistoryMode("featured")}>
                    <div class="scrolling-btn-image-gray absolute left-0 top-0 hidden group-hover:block" />
                    <p class={`text-14 ${historyMode() == "featured" ? "text-dark-1b" : "text-gray-8c"} group-hover:text-dark-1b font-medium font-Oswald uppercase z-10 px-4 py-1.5`}>Featured</p>
                </div>
            </div>
            <div class="w-full grid grid-cols-jackpot-history gap-4 overflow-hidden pb-3 mt-10">
                {historyMode() === "history" ? <For each={history()}>
                    {(val) => (
                        <div
                            class={`${history().length === 4 ? "last:hidden sm:last:flex" : "flex"} w-full p-6 flex-col justify-between items-center relative bg-cover `}
                            style={{"background-image": `url(${CardBg})`}}
                        >
                            <div class="w-full flex flex-col gap-2 items-center relative z-10 mb-8">
                                <img alt="avatar" class="w-8 h-8 rounded-full bg-white" src={val.winner?.avatar} />
                                <p class="text-18 text-white font-bold truncate" style={{"max-width": "8rem"}}>{val.winner?.username}</p>
                                <div class="flex gap-2 items-center">
                                    <Coin />
                                    <p class="text-18 text-white font-bold font-Oswald">{val.pot}</p>
                                </div>
                            </div>
                            <span class="border-t border-dark-20 w-full mb-4" />
                            <div class="flex justify-between w-full relative z-10">
                                <div class="flex flex-col gap-1">
                                    <p class="text-14 text-gray-8c font-medium font-Oswald">{(val.winner?.bet / val.pot * 100).toFixed(2)}%</p>
                                    <p class="text-14 text-gray-8c font-normal sentence">{i18n.t('jackpot.chance')}</p>
                                </div>
                                <div class="flex gap-4">
                                    <div class="flex flex-col gap-1">
                                        <p class="text-14 text-green font-medium font-Oswald">{val.provablyFair.roll}</p>
                                        <p class="text-14 text-gray-8c font-normal sentence">{i18n.t('jackpot.ticket')}</p>
                                    </div>
                                </div>
                                <div class="flex flex-col gap-2">
                                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M16.9465 15.7183C16.1039 16.7456 15.0436 17.573 13.8423 18.1405C12.641 18.708 11.3286 19.0016 9.99997 19C7.61302 19 5.32382 18.0518 3.636 16.364C1.94817 14.6761 1 12.3869 1 10" stroke="#EC981A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                        <path d="M1 9.99996C1 7.61302 1.94817 5.32388 3.636 3.63606C5.32382 1.94823 7.61302 1 9.99996 1" stroke="#FFC701" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                        <path d="M10 1C12.3869 1 14.6761 1.94823 16.364 3.63606C18.0518 5.32388 19 7.61302 19 9.99997C19.004 12.0873 18.2775 14.1103 16.9465 15.7183" stroke="#A96500" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                        <circle cx="9.99999" cy="9.99999" r="4.49999" stroke="#EC981A" stroke-width="1.5"/>
                                    </svg>
                                    <p class="text-14 text-yellow-ff font-medium font-Oswald uppercase">{i18n.t('jackpot.jackpot')}</p>
                                </div>
                            </div>
                        </div>
                    )}
                </For> : 
                   <For each={featured()}>
                        {(val) => (
                            <>{val.winner && <div
                                class="flex w-full p-6 flex-col drop-shadow-md justify-between items-center relative bg-cover"
                                style={{"background-image": `url(${CardBg})`}}
                            >
                                <div class="w-full flex flex-col gap-2 items-center relative z-10 mb-8">
                                    <img alt="avatar" class="w-8 h-8 rounded-full bg-white" src={val?.winner?.avatar} />
                                    <p class="text-18 text-white font-bold truncate" style={{"max-width": "8rem"}}>{val.winner?.username}</p>
                                    <div
                                        class={`flex items-center relative w-40 h-8 border cursor-pointer ${val.colorCalss}`}
                                        style={{
                                            background: "#1d2033",
                                        }}
                                    >
                                        <span class="absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 uppercase font-Oswald w-full text-center text-14" style={{color: val.titleColor}}>{val.title}</span>
                                    </div>
                                </div>
                                <span class="border-t border-dark-20 w-full mb-4" />
                                <div class="flex justify-between w-full relative z-10">
                                    <div class="flex gap-4">
                                        <div class="flex flex-col gap-1">
                                            <p class="text-14 text-gray-8c font-medium font-Oswald">{val.pot}</p>
                                            <p class="text-14 text-gray-8c font-normal sentence">{i18n.t('Total won')}</p>
                                        </div>
                                    </div>
                                    <div class="flex flex-col gap-1">
                                        <p class="text-14 text-gray-8c font-medium font-Oswald">{(val.winner?.bet / val.pot * 100).toFixed(2)}%</p>
                                        <p class="text-14 text-gray-8c font-normal sentence">{i18n.t('jackpot.chance')}</p>
                                    </div>
                                    <div class="flex gap-4">
                                        <div class="flex flex-col gap-1">
                                            <p class="text-14 text-gray-8c font-medium font-Oswald">{val.provablyFair.roll}</p>
                                            <p class="text-14 text-gray-8c font-normal sentence">{i18n.t('jackpot.ticket')}</p>
                                        </div>
                                    </div>
                                </div>
                            </div>}</>
                        )}
                    </For>
                }
                
            </div>
        </div>
    </Fallback>
    )
}


export default Jackpot